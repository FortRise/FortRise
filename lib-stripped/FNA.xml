<?xml version="1.0"?>
<!--
Generated from https://github.com/FNA-XNA/FNA.
-->
<doc>
    <assembly>
        <name>FNA</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Xna.Framework.Audio.NamespaceDoc">
            <summary>
            Support for playing sound effects and XACT audio.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.CreateFromPoints(System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Create a bounding box from the given list of points.
            </summary>
            <param name="points">
            The list of Vector3 instances defining the point cloud to bound.
            </param>
            <returns>A bounding box that encapsulates the given point cloud.</returns>
            <exception cref="T:System.ArgumentException">
            Thrown if the given list has no points.
            </exception>
        </member>
        <member name="T:Microsoft.Xna.Framework.BoundingFrustum">
            <summary>
            Defines a viewing frustum for intersection operations.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Matrix">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Xna.Framework.BoundingFrustum.Matrix"/> of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Near">
            <summary>
            Gets the near plane of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Far">
            <summary>
            Gets the far plane of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Left">
            <summary>
            Gets the left plane of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Right">
            <summary>
            Gets the right plane of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Top">
            <summary>
            Gets the top plane of the frustum.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.BoundingFrustum.Bottom">
            <summary>
            Gets the bottom plane of the frustum.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.BoundingFrustum.CornerCount">
            <summary>
            The number of corner points in the frustum.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.BoundingFrustum.PlaneCount">
            <summary>
            The number of planes in the frustum.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.#ctor(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Constructs the frustum by extracting the view planes from a matrix.
            </summary>
            <param name="value">Combined matrix which usually is (View * Projection).</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="frustum">A <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/>.
            </summary>
            <param name="box">A <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/>.
            </summary>
            <param name="box">A <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> for testing.</param>
            <param name="result">Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.
            </summary>
            <param name="sphere">A <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.
            </summary>
            <param name="sphere">A <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> for testing.</param>
            <param name="result">Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="point">A <see cref="T:Microsoft.Xna.Framework.Vector3"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Containment test between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="point">A <see cref="T:Microsoft.Xna.Framework.Vector3"/> for testing.</param>
            <param name="result">Result of testing for containment between this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> and specified <see cref="T:Microsoft.Xna.Framework.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.GetCorners">
            <summary>
            Returns a copy of internal corners array.
            </summary>
            <returns>The array of corners.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.GetCorners(Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Returns a copy of internal corners array.
            </summary>
            <param name="corners">The array which values will be replaced to corner values of this instance. It must have size of <see cref="F:Microsoft.Xna.Framework.BoundingFrustum.CornerCount"/>.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="frustum">An other <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> for intersection test.</param>
            <returns><c>true</c> if other <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="box">A <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> for intersection test.</param>
            <returns><c>true</c> if specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox@,System.Boolean@)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="box">A <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> for intersection test.</param>
            <param name="result"><c>true</c> if specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>; <c>false</c> otherwise as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="sphere">A <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> for intersection test.</param>
            <returns><c>true</c> if specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere@,System.Boolean@)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="sphere">A <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> for intersection test.</param>
            <param name="result"><c>true</c> if specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>; <c>false</c> otherwise as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane)">
            <summary>
            Gets type of intersection between specified <see cref="T:Microsoft.Xna.Framework.Plane"/> and this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="plane">A <see cref="T:Microsoft.Xna.Framework.Plane"/> for intersection test.</param>
            <returns>A plane intersection type.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.PlaneIntersectionType@)">
            <summary>
            Gets type of intersection between specified <see cref="T:Microsoft.Xna.Framework.Plane"/> and this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="plane">A <see cref="T:Microsoft.Xna.Framework.Plane"/> for intersection test.</param>
            <param name="result">A plane intersection type as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray)">
            <summary>
            Gets the distance of intersection of <see cref="T:Microsoft.Xna.Framework.Ray"/> and this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> or null if no intersection happens.
            </summary>
            <param name="ray">A <see cref="T:Microsoft.Xna.Framework.Ray"/> for intersection test.</param>
            <returns>Distance at which ray intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> or null if no intersection happens.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray@,System.Nullable{System.Single}@)">
            <summary>
            Gets the distance of intersection of <see cref="T:Microsoft.Xna.Framework.Ray"/> and this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> or null if no intersection happens.
            </summary>
            <param name="ray">A <see cref="T:Microsoft.Xna.Framework.Ray"/> for intersection test.</param>
            <param name="result">Distance at which ray intersects with this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> or null if no intersection happens as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.op_Equality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.op_Inequality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Equals(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/> in the format:
            {Near:[nearPlane] Far:[farPlane] Left:[leftPlane] Right:[rightPlane] Top:[topPlane] Bottom:[bottomPlane]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingFrustum.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.BoundingSphere">
            <summary>
            Describes a sphere in 3D-space for bounding operations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.BoundingSphere.Center">
            <summary>
            The sphere center.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.BoundingSphere.Radius">
            <summary>
            The sphere radius.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.#ctor(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Constructs a bounding sphere with the specified center and radius.
            </summary>
            <param name="center">The sphere center.</param>
            <param name="radius">The sphere radius.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Transform(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that contains a transformation of translation and scale from this sphere by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Transform(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.BoundingSphere@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that contains a transformation of translation and scale from this sphere by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingBox@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Test if a bounding box is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Test if a sphere is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Test if a point is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="point">The vector in 3D-space for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Test if a bounding box is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <returns>The containment type.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Test if a frustum is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Test if a sphere is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <returns>The containment type.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Contains(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Test if a point is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="point">The vector in 3D-space for testing.</param>
            <returns>The containment type.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Equals(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateFromBoundingBox(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/>.
            </summary>
            <param name="box">The box to create the sphere from.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateFromBoundingBox(Microsoft.Xna.Framework.BoundingBox@,Microsoft.Xna.Framework.BoundingSphere@)">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/>.
            </summary>
            <param name="box">The box to create the sphere from.</param>
            <param name="result">The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateFromFrustum(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain a specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="frustum">The frustum to create the sphere from.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateFromPoints(System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain a specified list of points in 3D-space.
            </summary>
            <param name="points">List of point to create the sphere from.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateMerged(Microsoft.Xna.Framework.BoundingSphere,Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain two spheres.
            </summary>
            <param name="original">First sphere.</param>
            <param name="additional">Second sphere.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.CreateMerged(Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.BoundingSphere@)">
            <summary>
            Creates the smallest <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> that can contain two spheres.
            </summary>
            <param name="original">First sphere.</param>
            <param name="additional">Second sphere.</param>
            <param name="result">The new <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <returns><c>true</c> if <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this sphere; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.BoundingBox@,System.Boolean@)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <param name="result"><c>true</c> if <see cref="T:Microsoft.Xna.Framework.BoundingBox"/> intersects with this sphere; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Gets whether or not the other <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <returns><c>true</c> if other <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this sphere; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.BoundingSphere@,System.Boolean@)">
            <summary>
            Gets whether or not the other <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <param name="result"><c>true</c> if other <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> intersects with this sphere; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.Ray)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.Ray"/> intersects with this sphere.
            </summary>
            <param name="ray">The ray for testing.</param>
            <returns>Distance of ray intersection or <c>null</c> if there is no intersection.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.Ray@,System.Nullable{System.Single}@)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.Ray"/> intersects with this sphere.
            </summary>
            <param name="ray">The ray for testing.</param>
            <param name="result">Distance of ray intersection or <c>null</c> if there is no intersection as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.Plane)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.Plane"/> intersects with this sphere.
            </summary>
            <param name="plane">The plane for testing.</param>
            <returns>Type of intersection.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Intersects(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.PlaneIntersectionType@)">
            <summary>
            Gets whether or not a specified <see cref="T:Microsoft.Xna.Framework.Plane"/> intersects with this sphere.
            </summary>
            <param name="plane">The plane for testing.</param>
            <param name="result">Type of intersection as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> in the format:
            {Center:[<see cref="F:Microsoft.Xna.Framework.BoundingSphere.Center"/>] Radius:[<see cref="F:Microsoft.Xna.Framework.BoundingSphere.Radius"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.op_Equality(Microsoft.Xna.Framework.BoundingSphere,Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.BoundingSphere.op_Inequality(Microsoft.Xna.Framework.BoundingSphere,Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.BoundingSphere"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Color">
            <summary>
            Describes a 32-bit packed color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.B">
            <summary>
            Gets or sets the blue component.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.G">
            <summary>
            Gets or sets the green component.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.R">
            <summary>
            Gets or sets the red component.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.A">
            <summary>
            Gets or sets the alpha component.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PackedValue">
            <summary>
            Gets or sets packed value of this <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Transparent">
            <summary>
            Transparent color (R:0,G:0,B:0,A:0).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.AliceBlue">
            <summary>
            AliceBlue color (R:240,G:248,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.AntiqueWhite">
            <summary>
            AntiqueWhite color (R:250,G:235,B:215,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Aqua">
            <summary>
            Aqua color (R:0,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Aquamarine">
            <summary>
            Aquamarine color (R:127,G:255,B:212,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Azure">
            <summary>
            Azure color (R:240,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Beige">
            <summary>
            Beige color (R:245,G:245,B:220,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Bisque">
            <summary>
            Bisque color (R:255,G:228,B:196,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Black">
            <summary>
            Black color (R:0,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.BlanchedAlmond">
            <summary>
            BlanchedAlmond color (R:255,G:235,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Blue">
            <summary>
            Blue color (R:0,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.BlueViolet">
            <summary>
            BlueViolet color (R:138,G:43,B:226,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Brown">
            <summary>
            Brown color (R:165,G:42,B:42,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.BurlyWood">
            <summary>
            BurlyWood color (R:222,G:184,B:135,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.CadetBlue">
            <summary>
            CadetBlue color (R:95,G:158,B:160,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Chartreuse">
            <summary>
            Chartreuse color (R:127,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Chocolate">
            <summary>
            Chocolate color (R:210,G:105,B:30,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Coral">
            <summary>
            Coral color (R:255,G:127,B:80,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.CornflowerBlue">
            <summary>
            CornflowerBlue color (R:100,G:149,B:237,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Cornsilk">
            <summary>
            Cornsilk color (R:255,G:248,B:220,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Crimson">
            <summary>
            Crimson color (R:220,G:20,B:60,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Cyan">
            <summary>
            Cyan color (R:0,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkBlue">
            <summary>
            DarkBlue color (R:0,G:0,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkCyan">
            <summary>
            DarkCyan color (R:0,G:139,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkGoldenrod">
            <summary>
            DarkGoldenrod color (R:184,G:134,B:11,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkGray">
            <summary>
            DarkGray color (R:169,G:169,B:169,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkGreen">
            <summary>
            DarkGreen color (R:0,G:100,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkKhaki">
            <summary>
            DarkKhaki color (R:189,G:183,B:107,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkMagenta">
            <summary>
            DarkMagenta color (R:139,G:0,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkOliveGreen">
            <summary>
            DarkOliveGreen color (R:85,G:107,B:47,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkOrange">
            <summary>
            DarkOrange color (R:255,G:140,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkOrchid">
            <summary>
            DarkOrchid color (R:153,G:50,B:204,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkRed">
            <summary>
            DarkRed color (R:139,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSalmon">
            <summary>
            DarkSalmon color (R:233,G:150,B:122,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSeaGreen">
            <summary>
            DarkSeaGreen color (R:143,G:188,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSlateBlue">
            <summary>
            DarkSlateBlue color (R:72,G:61,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSlateGray">
            <summary>
            DarkSlateGray color (R:47,G:79,B:79,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkTurquoise">
            <summary>
            DarkTurquoise color (R:0,G:206,B:209,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkViolet">
            <summary>
            DarkViolet color (R:148,G:0,B:211,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DeepPink">
            <summary>
            DeepPink color (R:255,G:20,B:147,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DeepSkyBlue">
            <summary>
            DeepSkyBlue color (R:0,G:191,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DimGray">
            <summary>
            DimGray color (R:105,G:105,B:105,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DodgerBlue">
            <summary>
            DodgerBlue color (R:30,G:144,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Firebrick">
            <summary>
            Firebrick color (R:178,G:34,B:34,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.FloralWhite">
            <summary>
            FloralWhite color (R:255,G:250,B:240,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.ForestGreen">
            <summary>
            ForestGreen color (R:34,G:139,B:34,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Fuchsia">
            <summary>
            Fuchsia color (R:255,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Gainsboro">
            <summary>
            Gainsboro color (R:220,G:220,B:220,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.GhostWhite">
            <summary>
            GhostWhite color (R:248,G:248,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Gold">
            <summary>
            Gold color (R:255,G:215,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Goldenrod">
            <summary>
            Goldenrod color (R:218,G:165,B:32,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Gray">
            <summary>
            Gray color (R:128,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Green">
            <summary>
            Green color (R:0,G:128,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.GreenYellow">
            <summary>
            GreenYellow color (R:173,G:255,B:47,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Honeydew">
            <summary>
            Honeydew color (R:240,G:255,B:240,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.HotPink">
            <summary>
            HotPink color (R:255,G:105,B:180,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.IndianRed">
            <summary>
            IndianRed color (R:205,G:92,B:92,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Indigo">
            <summary>
            Indigo color (R:75,G:0,B:130,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Ivory">
            <summary>
            Ivory color (R:255,G:255,B:240,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Khaki">
            <summary>
            Khaki color (R:240,G:230,B:140,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Lavender">
            <summary>
            Lavender color (R:230,G:230,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LavenderBlush">
            <summary>
            LavenderBlush color (R:255,G:240,B:245,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LawnGreen">
            <summary>
            LawnGreen color (R:124,G:252,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LemonChiffon">
            <summary>
            LemonChiffon color (R:255,G:250,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightBlue">
            <summary>
            LightBlue color (R:173,G:216,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightCoral">
            <summary>
            LightCoral color (R:240,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightCyan">
            <summary>
            LightCyan color (R:224,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightGoldenrodYellow">
            <summary>
            LightGoldenrodYellow color (R:250,G:250,B:210,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightGray">
            <summary>
            LightGray color (R:211,G:211,B:211,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightGreen">
            <summary>
            LightGreen color (R:144,G:238,B:144,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightPink">
            <summary>
            LightPink color (R:255,G:182,B:193,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSalmon">
            <summary>
            LightSalmon color (R:255,G:160,B:122,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSeaGreen">
            <summary>
            LightSeaGreen color (R:32,G:178,B:170,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSkyBlue">
            <summary>
            LightSkyBlue color (R:135,G:206,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSlateGray">
            <summary>
            LightSlateGray color (R:119,G:136,B:153,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSteelBlue">
            <summary>
            LightSteelBlue color (R:176,G:196,B:222,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightYellow">
            <summary>
            LightYellow color (R:255,G:255,B:224,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Lime">
            <summary>
            Lime color (R:0,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LimeGreen">
            <summary>
            LimeGreen color (R:50,G:205,B:50,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Linen">
            <summary>
            Linen color (R:250,G:240,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Magenta">
            <summary>
            Magenta color (R:255,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Maroon">
            <summary>
            Maroon color (R:128,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumAquamarine">
            <summary>
            MediumAquamarine color (R:102,G:205,B:170,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumBlue">
            <summary>
            MediumBlue color (R:0,G:0,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumOrchid">
            <summary>
            MediumOrchid color (R:186,G:85,B:211,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumPurple">
            <summary>
            MediumPurple color (R:147,G:112,B:219,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumSeaGreen">
            <summary>
            MediumSeaGreen color (R:60,G:179,B:113,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumSlateBlue">
            <summary>
            MediumSlateBlue color (R:123,G:104,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumSpringGreen">
            <summary>
            MediumSpringGreen color (R:0,G:250,B:154,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumTurquoise">
            <summary>
            MediumTurquoise color (R:72,G:209,B:204,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumVioletRed">
            <summary>
            MediumVioletRed color (R:199,G:21,B:133,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MidnightBlue">
            <summary>
            MidnightBlue color (R:25,G:25,B:112,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MintCream">
            <summary>
            MintCream color (R:245,G:255,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MistyRose">
            <summary>
            MistyRose color (R:255,G:228,B:225,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Moccasin">
            <summary>
            Moccasin color (R:255,G:228,B:181,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.NavajoWhite">
            <summary>
            NavajoWhite color (R:255,G:222,B:173,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Navy">
            <summary>
            Navy color (R:0,G:0,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.OldLace">
            <summary>
            OldLace color (R:253,G:245,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Olive">
            <summary>
            Olive color (R:128,G:128,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.OliveDrab">
            <summary>
            OliveDrab color (R:107,G:142,B:35,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Orange">
            <summary>
            Orange color (R:255,G:165,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.OrangeRed">
            <summary>
            OrangeRed color (R:255,G:69,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Orchid">
            <summary>
            Orchid color (R:218,G:112,B:214,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleGoldenrod">
            <summary>
            PaleGoldenrod color (R:238,G:232,B:170,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleGreen">
            <summary>
            PaleGreen color (R:152,G:251,B:152,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleTurquoise">
            <summary>
            PaleTurquoise color (R:175,G:238,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleVioletRed">
            <summary>
            PaleVioletRed color (R:219,G:112,B:147,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PapayaWhip">
            <summary>
            PapayaWhip color (R:255,G:239,B:213,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PeachPuff">
            <summary>
            PeachPuff color (R:255,G:218,B:185,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Peru">
            <summary>
            Peru color (R:205,G:133,B:63,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Pink">
            <summary>
            Pink color (R:255,G:192,B:203,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Plum">
            <summary>
            Plum color (R:221,G:160,B:221,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PowderBlue">
            <summary>
            PowderBlue color (R:176,G:224,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Purple">
            <summary>
            Purple color (R:128,G:0,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Red">
            <summary>
            Red color (R:255,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.RosyBrown">
            <summary>
            RosyBrown color (R:188,G:143,B:143,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.RoyalBlue">
            <summary>
            RoyalBlue color (R:65,G:105,B:225,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SaddleBrown">
            <summary>
            SaddleBrown color (R:139,G:69,B:19,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Salmon">
            <summary>
            Salmon color (R:250,G:128,B:114,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SandyBrown">
            <summary>
            SandyBrown color (R:244,G:164,B:96,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SeaGreen">
            <summary>
            SeaGreen color (R:46,G:139,B:87,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SeaShell">
            <summary>
            SeaShell color (R:255,G:245,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Sienna">
            <summary>
            Sienna color (R:160,G:82,B:45,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Silver">
            <summary>
            Silver color (R:192,G:192,B:192,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SkyBlue">
            <summary>
            SkyBlue color (R:135,G:206,B:235,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SlateBlue">
            <summary>
            SlateBlue color (R:106,G:90,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SlateGray">
            <summary>
            SlateGray color (R:112,G:128,B:144,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Snow">
            <summary>
            Snow color (R:255,G:250,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SpringGreen">
            <summary>
            SpringGreen color (R:0,G:255,B:127,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SteelBlue">
            <summary>
            SteelBlue color (R:70,G:130,B:180,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Tan">
            <summary>
            Tan color (R:210,G:180,B:140,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Teal">
            <summary>
            Teal color (R:0,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Thistle">
            <summary>
            Thistle color (R:216,G:191,B:216,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Tomato">
            <summary>
            Tomato color (R:255,G:99,B:71,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Turquoise">
            <summary>
            Turquoise color (R:64,G:224,B:208,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Violet">
            <summary>
            Violet color (R:238,G:130,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Wheat">
            <summary>
            Wheat color (R:245,G:222,B:179,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.White">
            <summary>
            White color (R:255,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.WhiteSmoke">
            <summary>
            WhiteSmoke color (R:245,G:245,B:245,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Yellow">
            <summary>
            Yellow color (R:255,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.YellowGreen">
            <summary>
            YellowGreen color (R:154,G:205,B:50,A:255).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.Color"/> struct.
            </summary>
            <param name="color">A <see cref="T:Microsoft.Xna.Framework.Vector4"/> representing a color.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Constructs an RGBA color from the XYZW unit length components of a vector.
            </summary>
            <param name="color">A <see cref="T:Microsoft.Xna.Framework.Vector3"/> representing a color.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs an RGBA color from scalars which representing red, green and blue values. Alpha value will be opaque.
            </summary>
            <param name="r">Red component value from 0.0f to 1.0f.</param>
            <param name="g">Green component value from 0.0f to 1.0f.</param>
            <param name="b">Blue component value from 0.0f to 1.0f.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs an RGBA color from scalars which representing red, green and blue values. Alpha value will be opaque.
            </summary>
            <param name="r">Red component value from 0 to 255.</param>
            <param name="g">Green component value from 0 to 255.</param>
            <param name="b">Blue component value from 0 to 255.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs an RGBA color from scalars which representing red, green, blue and alpha values.
            </summary>
            <param name="r">Red component value from 0 to 255.</param>
            <param name="g">Green component value from 0 to 255.</param>
            <param name="b">Blue component value from 0 to 255.</param>
            <param name="alpha">Alpha component value from 0 to 255.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs an RGBA color from scalars which representing red, green, blue and alpha values.
            </summary>
            <param name="r">Red component value from 0.0f to 1.0f.</param>
            <param name="g">Green component value from 0.0f to 1.0f.</param>
            <param name="b">Blue component value from 0.0f to 1.0f.</param>
            <param name="alpha">Alpha component value from 0.0f to 1.0f.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Equals(Microsoft.Xna.Framework.Color)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Color"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToVector3">
            <summary>
            Gets a <see cref="T:Microsoft.Xna.Framework.Vector3"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Vector3"/> representation for this object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToVector4">
            <summary>
            Gets a <see cref="T:Microsoft.Xna.Framework.Vector4"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Vector4"/> representation for this object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Lerp(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Performs linear interpolation of <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="value2">Destination <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="amount">Interpolation factor.</param>
            <returns>Interpolated <see cref="T:Microsoft.Xna.Framework.Color"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.FromNonPremultiplied(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Translate a non-premultipled alpha <see cref="T:Microsoft.Xna.Framework.Color"/> to a <see cref="T:Microsoft.Xna.Framework.Color"/>
            that contains premultiplied alpha.
            </summary>
            <param name="vector">A <see cref="T:Microsoft.Xna.Framework.Vector4"/> representing color.</param>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Color"/> which contains premultiplied alpha data.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.FromNonPremultiplied(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Translate a non-premultipled alpha <see cref="T:Microsoft.Xna.Framework.Color"/> to a <see cref="T:Microsoft.Xna.Framework.Color"/>
            that contains premultiplied alpha.
            </summary>
            <param name="r">Red component value.</param>
            <param name="g">Green component value.</param>
            <param name="b">Blue component value.</param>
            <param name="a">Alpha component value.</param>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Color"/> which contains premultiplied alpha data.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Equality(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Color"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Color"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Color"/> instance on the right of the equal sign.</param>
            <returns><c>True</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Inequality(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Color"/> instances are not equal.
            </summary>
            <param name="a">
            <see cref="T:Microsoft.Xna.Framework.Color"/> instance on the left of the not equal sign.
            </param>
            <param name="b">
            <see cref="T:Microsoft.Xna.Framework.Color"/> instance on the right of the not equal sign.
            </param>
            <returns>
            <c>True</c> if the instances are not equal; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Color"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified object.
            </summary>
            <param name="obj">The <see cref="T:Microsoft.Xna.Framework.Color"/> to compare.</param>
            <returns><c>True</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Multiply(Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Multiply <see cref="T:Microsoft.Xna.Framework.Color"/> by value.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="scale">Multiplicator.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Multiply(Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Multiply <see cref="T:Microsoft.Xna.Framework.Color"/> by value.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="scale">Multiplicator.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Color"/> in the format:
            {R:[red] G:[green] B:[blue] A:[alpha]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Color"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Pack a four-component color from a vector format into the format of a color object.
            </summary>
            <param name="vector">A four-component color.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.ContainmentType">
            <summary>
            Defines how the bounding volumes intersects or contain one another.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.ContainmentType.Disjoint">
            <summary>
            Indicates that there is no overlap between two bounding volumes.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.ContainmentType.Contains">
            <summary>
            Indicates that one bounding volume completely contains another volume.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.ContainmentType.Intersects">
            <summary>
            Indicates that bounding volumes partially overlap one another.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ExternalReferenceReader">
            <summary>
            External reference reader, provided for compatibility with XNA Framework built content
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.CollectionItemName">
            <summary>
            Returns the overriden XML element name or the default "Item".
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.HasCollectionItemName">
            <summary>
            Returns true if the default CollectionItemName value was overridden.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerAttribute.#ctor">
            <summary>
            Creates an instance of the attribute.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentSerializerCollectionItemNameAttribute">
            <summary>
            This is used to specify the XML element name to use for each item in a collection.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerCollectionItemNameAttribute.CollectionItemName">
            <summary>
            The XML element name to use for each item in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerCollectionItemNameAttribute.#ctor(System.String)">
            <summary>
            Creates an instance of the attribute.
            </summary>
            <param name="collectionItemName">The XML element name to use for each item in the collection.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentSerializerRuntimeTypeAttribute">
            <summary>
            This is used to specify the type to use when deserializing this object at runtime.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerRuntimeTypeAttribute.RuntimeType">
            <summary>
            The name of the type to use at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerRuntimeTypeAttribute.#ctor(System.String)">
            <summary>
            Creates an instance of the attribute.
            </summary>
            <param name="runtimeType">The name of the type to use at runtime.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentSerializerTypeVersionAttribute">
            <summary>
            This is used to specify the version when deserializing this object at runtime.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerTypeVersionAttribute.TypeVersion">
            <summary>
            The version passed to the type at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerTypeVersionAttribute.#ctor(System.Int32)">
            <summary>
            Creates an instance of the attribute.
            </summary>
            <param name="typeVersion">The version passed to the type at runtime.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReader`1.Read(Microsoft.Xna.Framework.Content.ContentReader,System.Object)">
            <summary>
            Reads an object from the input stream.
            </summary>
            <param name="input">The input stream.</param>
            <param name="existingInstance">
            Existing instance of an object to receive the data, or null if a new object
            instance should be created.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeCreator(System.String,System.Func{Microsoft.Xna.Framework.Content.ContentTypeReader})">
            <summary>
            Adds the type creator.
            </summary>
            <param name='typeString'>
            Type string.
            </param>
            <param name='createFunction'>
            Create function.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.PrepareType(System.String)">
            <summary>
            Removes Version, Culture and PublicKeyToken from a type string.
            </summary>
            <remarks>
            Supports multiple generic types (e.g. Dictionary&lt;TKey,TValue&gt;)
            and nested generic types (e.g. List&lt;List&lt;int&gt;&gt;).
            </remarks>
            <param name="type">
            A <see cref="T:System.String"/>
            </param>
            <returns>
            A <see cref="T:System.String"/>
            </returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.NamespaceDoc">
            <summary>
            The runtime support for loading content pipeline content.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Curve">
            <summary>
            Contains a collection of <see cref="T:Microsoft.Xna.Framework.CurveKey"/> points in 2D space and provides methods for evaluating features of the curve they define.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Curve.IsConstant">
            <summary>
            Returns <c>true</c> if this curve is constant (has zero or one points); <c>false</c> otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Curve.Keys">
            <summary>
            The collection of curve keys.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Curve.PostLoop">
            <summary>
            Defines how to handle weighting values that are greater than the last control point in the curve.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Curve.PreLoop">
            <summary>
            Defines how to handle weighting values that are less than the first control point in the curve.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Curve.#ctor">
            <summary>
            Constructs a curve.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Curve.Clone">
            <summary>
            Creates a copy of this curve.
            </summary>
            <returns>A copy of this curve.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Curve.Evaluate(System.Single)">
            <summary>
            Evaluate the value at a position of this <see cref="T:Microsoft.Xna.Framework.Curve"/>.
            </summary>
            <param name="position">The position on this <see cref="T:Microsoft.Xna.Framework.Curve"/>.</param>
            <returns>Value at the position on this <see cref="T:Microsoft.Xna.Framework.Curve"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent)">
            <summary>
            Computes tangents for all keys in the collection.
            </summary>
            <param name="tangentType">The tangent type for both in and out.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)">
            <summary>
            Computes tangents for all keys in the collection.
            </summary>
            <param name="tangentInType">The tangent in-type. <see cref="P:Microsoft.Xna.Framework.CurveKey.TangentIn"/> for more details.</param>
            <param name="tangentOutType">The tangent out-type. <see cref="P:Microsoft.Xna.Framework.CurveKey.TangentOut"/> for more details.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent)">
            <summary>
            Computes tangent for the specific key in the collection.
            </summary>
            <param name="keyIndex">The index of a key in the collection.</param>
            <param name="tangentType">The tangent type for both in and out.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)">
            <summary>
            Computes tangent for the specific key in the collection.
            </summary>
            <param name="keyIndex">The index of key in the collection.</param>
            <param name="tangentInType">The tangent in-type. <see cref="P:Microsoft.Xna.Framework.CurveKey.TangentIn"/> for more details.</param>
            <param name="tangentOutType">The tangent out-type. <see cref="P:Microsoft.Xna.Framework.CurveKey.TangentOut"/> for more details.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.CurveContinuity">
            <summary>
            Defines the continuity of keys on a <see cref="T:Microsoft.Xna.Framework.Curve"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.CurveContinuity.Smooth">
            <summary>
            Interpolation can be used between this key and the next.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.CurveContinuity.Step">
            <summary>
            Interpolation cannot be used. A position between the two points returns this point.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.CurveKey">
            <summary>
            Key point on the <see cref="T:Microsoft.Xna.Framework.Curve"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKey.Continuity">
            <summary>
            Gets or sets the indicator whether the segment between this point and the next point on the curve is discrete or continuous.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKey.Position">
            <summary>
            Gets a position of the key on the curve.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKey.TangentIn">
            <summary>
            Gets or sets a tangent when approaching this point from the previous point on the curve.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKey.TangentOut">
            <summary>
            Gets or sets a tangent when leaving this point to the next point on the curve.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKey.Value">
            <summary>
            Gets a value of this point.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.CurveKey"/> class.
            </summary>
            <param name="position">Position on the curve.</param>
            <param name="value">Value of the control point.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.CurveKey"/> class.
            </summary>
            <param name="position">Position on the curve.</param>
            <param name="value">Value of the control point.</param>
            <param name="tangentIn">Tangent approaching point from the previous point on the curve.</param>
            <param name="tangentOut">Tangent leaving point toward next point on the curve.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.CurveContinuity)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.CurveKey"/> class.
            </summary>
            <param name="position">Position on the curve.</param>
            <param name="value">Value of the control point.</param>
            <param name="tangentIn">Tangent approaching point from the previous point on the curve.</param>
            <param name="tangentOut">Tangent leaving point toward next point on the curve.</param>
            <param name="continuity">Indicates whether the curve is discrete or continuous.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKey.Clone">
            <summary>
            Creates a copy of this key.
            </summary>
            <returns>A copy of this key.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKey.op_Inequality(Microsoft.Xna.Framework.CurveKey,Microsoft.Xna.Framework.CurveKey)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.CurveKey"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.CurveKey"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.CurveKey"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKey.op_Equality(Microsoft.Xna.Framework.CurveKey,Microsoft.Xna.Framework.CurveKey)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.CurveKey"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.CurveKey"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.CurveKey"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.CurveKeyCollection">
            <summary>
            The collection of the <see cref="T:Microsoft.Xna.Framework.CurveKey"/> elements and a part of the <see cref="T:Microsoft.Xna.Framework.Curve"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKeyCollection.Count">
            <summary>
            Returns the count of keys in this collection.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKeyCollection.IsReadOnly">
            <summary>
            Returns false because it is not a read-only collection.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.CurveKeyCollection.Item(System.Int32)">
            <summary>
            Indexer.
            </summary>
            <param name="index">The index of key in this collection.</param>
            <returns><see cref="T:Microsoft.Xna.Framework.CurveKey"/> at <paramref name="index"/> position.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.CurveKeyCollection"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.Add(Microsoft.Xna.Framework.CurveKey)">
            <summary>
            Adds a key to this collection.
            </summary>
            <param name="item">New key for the collection.</param>
            <exception cref="T:System.ArgumentNullException">Throws if <paramref name="item"/> is null.</exception>
            <remarks>The new key would be added respectively to a position of that key and the position of other keys.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.Clear">
            <summary>
            Removes all keys from this collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.Clone">
            <summary>
            Creates a copy of this collection.
            </summary>
            <returns>A copy of this collection.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.Contains(Microsoft.Xna.Framework.CurveKey)">
            <summary>
            Determines whether this collection contains a specific key.
            </summary>
            <param name="item">The key to locate in this collection.</param>
            <returns><c>true</c> if the key is found; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.CopyTo(Microsoft.Xna.Framework.CurveKey[],System.Int32)">
            <summary>
            Copies the keys of this collection to an array, starting at the array index provided.
            </summary>
            <param name="array">Destination array where elements will be copied.</param>
            <param name="arrayIndex">The zero-based index in the array to start copying from.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator for the <see cref="T:Microsoft.Xna.Framework.CurveKeyCollection"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.IndexOf(Microsoft.Xna.Framework.CurveKey)">
            <summary>
            Finds element in the collection and returns its index.
            </summary>
            <param name="item">Element for the search.</param>
            <returns>Index of the element; or -1 if item is not found.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.Remove(Microsoft.Xna.Framework.CurveKey)">
            <summary>
            Removes specific element.
            </summary>
            <param name="item">The element</param>
            <returns><c>true</c> if item is successfully removed; <c>false</c> otherwise. This method also returns <c>false</c> if item was not found.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.CurveKeyCollection.RemoveAt(System.Int32)">
            <summary>
            Removes element at the specified index.
            </summary>
            <param name="index">The index which element will be removed.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.CurveLoopType">
            <summary>
            Defines how the <see cref="T:Microsoft.Xna.Framework.Curve"/> value is determined for position before first point or after the end point on the <see cref="T:Microsoft.Xna.Framework.Curve"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.CurveLoopType.Constant">
            <summary>
            The value of <see cref="T:Microsoft.Xna.Framework.Curve"/> will be evaluated as first point for positions before the beginning and end point for positions after the end.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.CurveLoopType.Cycle">
            <summary>
            The positions will wrap around from the end to beginning of the <see cref="T:Microsoft.Xna.Framework.Curve"/> for determined the value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.CurveLoopType.CycleOffset">
            <summary>
            The positions will wrap around from the end to beginning of the <see cref="T:Microsoft.Xna.Framework.Curve"/>.
            The value will be offset by the difference between the values of first and end <see cref="T:Microsoft.Xna.Framework.CurveKey"/> multiplied by the wrap amount.
            If the position is before the beginning of the <see cref="T:Microsoft.Xna.Framework.Curve"/> the difference will be subtracted from its value; otherwise the difference will be added.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.CurveLoopType.Oscillate">
            <summary>
            The value at the end of the <see cref="T:Microsoft.Xna.Framework.Curve"/> act as an offset from the same side of the <see cref="T:Microsoft.Xna.Framework.Curve"/> toward the opposite side.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.CurveLoopType.Linear">
            <summary>
            The linear interpolation will be performed for determined the value.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.CurveTangent">
            <summary>
            Defines the different tangent types to be calculated for <see cref="T:Microsoft.Xna.Framework.CurveKey"/> points in a <see cref="T:Microsoft.Xna.Framework.Curve"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.CurveTangent.Flat">
            <summary>
            The tangent which always has a value equal to zero.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.CurveTangent.Linear">
            <summary>
            The tangent which contains a difference between current tangent value and the tangent value from the previous <see cref="T:Microsoft.Xna.Framework.CurveKey"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.CurveTangent.Smooth">
            <summary>
            The smoouth tangent which contains the inflection between <see cref="P:Microsoft.Xna.Framework.CurveKey.TangentIn"/> and <see cref="P:Microsoft.Xna.Framework.CurveKey.TangentOut"/> by taking into account the values of both neighbors of the <see cref="T:Microsoft.Xna.Framework.CurveKey"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.DisplayOrientation">
            <summary>
            Defines the orientation of the display.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.DisplayOrientation.Default">
            <summary>
            The default orientation.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.DisplayOrientation.LandscapeLeft">
            <summary>
            The display is rotated counterclockwise into a landscape orientation. Width is greater than height.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.DisplayOrientation.LandscapeRight">
            <summary>
            The display is rotated clockwise into a landscape orientation. Width is greater than height.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.DisplayOrientation.Portrait">
            <summary>
            The display is rotated as portrait, where height is greater than width.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModernGLDevice.ReadTargetIfApplicable(Microsoft.Xna.Framework.Graphics.IGLTexture,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Attempts to read the texture data directly from the FBO using glReadPixels
            </summary>
            <typeparam name="T">Texture data type</typeparam>
            <param name="texture">The texture to read from</param>
            <param name="width">The texture width</param>
            <param name="height">The texture height</param>
            <param name="level">The texture level</param>
            <param name="data">The texture data array</param>
            <param name="rect">The portion of the image to read from</param>
            <returns>True if we successfully read the texture data</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.OpenGLDevice.ReadTargetIfApplicable(Microsoft.Xna.Framework.Graphics.IGLTexture,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Attempts to read the texture data directly from the FBO using glReadPixels
            </summary>
            <typeparam name="T">Texture data type</typeparam>
            <param name="texture">The texture to read from</param>
            <param name="width">The texture width</param>
            <param name="height">The texture height</param>
            <param name="level">The texture level</param>
            <param name="data">The texture data array</param>
            <param name="rect">The portion of the image to read from</param>
            <returns>True if we successfully read the texture data</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ClearOptions">
            <summary>
            Defines the buffers for clearing when calling <see cref="M:Microsoft.Xna.Framework.Graphics.GraphicsDevice.Clear(Microsoft.Xna.Framework.Color)"/> operation.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ClearOptions.Target">
            <summary>
            Color buffer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ClearOptions.DepthBuffer">
            <summary>
            Depth buffer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ClearOptions.Stencil">
            <summary>
            Stencil buffer.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ColorWriteChannels">
            <summary>
            Defines the color channels for render target blending operations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.None">
            <summary>
            No channels selected.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.Red">
            <summary>
            Red channel selected.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.Green">
            <summary>
            Green channel selected.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.Blue">
            <summary>
            Blue channel selected.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.Alpha">
            <summary>
            Alpha channel selected.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.ColorWriteChannels.All">
            <summary>
            All channels selected.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.CubeMapFace">
            <summary>
            Defines the faces in a cube map for the <see cref="T:Microsoft.Xna.Framework.Graphics.TextureCube"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CubeMapFace.PositiveX">
            <summary>
            Positive X face in the cube map.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CubeMapFace.NegativeX">
            <summary>
            Negative X face in the cube map.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CubeMapFace.PositiveY">
            <summary>
            Positive Y face in the cube map.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CubeMapFace.NegativeY">
            <summary>
            Negative Y face in the cube map.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CubeMapFace.PositiveZ">
            <summary>
            Positive Z face in the cube map.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CubeMapFace.NegativeZ">
            <summary>
            Negative Z face in the cube map.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.DepthFormat">
            <summary>
            Defines formats for depth-stencil buffer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.DepthFormat.None">
            <summary>
            Depth-stencil buffer will not be created.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.DepthFormat.Depth16">
            <summary>
            16-bit depth buffer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.DepthFormat.Depth24">
            <summary>
            24-bit depth buffer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.DepthFormat.Depth24Stencil8">
            <summary>
            32-bit depth-stencil buffer. Where 24-bit depth and 8-bit for stencil used.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.EffectParameterClass">
            <summary>
            Defines classes for effect parameters and shader constants.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterClass.Scalar">
            <summary>
            Scalar class type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterClass.Vector">
            <summary>
            Vector class type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterClass.Matrix">
            <summary>
            Matrix class type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterClass.Object">
            <summary>
            Class type for textures, shaders or strings.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterClass.Struct">
            <summary>
            Structure class type.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.EffectParameterType">
            <summary>
            Defines types for effect parameters and shader constants.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Void">
            <summary>
            Pointer to void type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Bool">
            <summary>
            Boolean type. Any non-zero will be <c>true</c>; <c>false</c> otherwise.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Int32">
            <summary>
            32-bit integer type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Single">
            <summary>
            Float type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.String">
            <summary>
            String type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Texture">
            <summary>
            Any texture type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Texture1D">
            <summary>
            1D-texture type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Texture2D">
            <summary>
            2D-texture type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.Texture3D">
            <summary>
            3D-texture type.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.EffectParameterType.TextureCube">
            <summary>
            Cubic texture type.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.AlphaTestEffect">
            <summary>
            Built-in effect that supports alpha testing.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.World">
            <summary>
            Gets or sets the world matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.Projection">
            <summary>
            Gets or sets the projection matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.DiffuseColor">
            <summary>
            Gets or sets the material diffuse color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.Alpha">
            <summary>
            Gets or sets the material alpha.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.FogEnabled">
            <summary>
            Gets or sets the fog enable flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.FogStart">
            <summary>
            Gets or sets the fog start distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.FogEnd">
            <summary>
            Gets or sets the fog end distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.FogColor">
            <summary>
            Gets or sets the fog color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.Texture">
            <summary>
            Gets or sets the current texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.VertexColorEnabled">
            <summary>
            Gets or sets whether vertex color is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.AlphaFunction">
            <summary>
            Gets or sets the alpha compare function (default Greater).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.ReferenceAlpha">
            <summary>
            Gets or sets the reference alpha value (default 0).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new AlphaTestEffect with default parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.#ctor(Microsoft.Xna.Framework.Graphics.AlphaTestEffect)">
            <summary>
            Creates a new AlphaTestEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.Clone">
            <summary>
            Creates a clone of the current AlphaTestEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.CacheEffectParameters">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.BasicEffect">
            <summary>
            Built-in effect that supports optional texturing, vertex coloring, fog, and lighting.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.World">
            <summary>
            Gets or sets the world matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.Projection">
            <summary>
            Gets or sets the projection matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.DiffuseColor">
            <summary>
            Gets or sets the material diffuse color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.EmissiveColor">
            <summary>
            Gets or sets the material emissive color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularColor">
            <summary>
            Gets or sets the material specular color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularPower">
            <summary>
            Gets or sets the material specular power.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.Alpha">
            <summary>
            Gets or sets the material alpha.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.LightingEnabled">
            <summary>
            Gets or sets the lighting enable flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.PreferPerPixelLighting">
            <summary>
            Gets or sets the per-pixel lighting prefer flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.AmbientLightColor">
            <summary>
            Gets or sets the ambient light color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight0">
            <summary>
            Gets the first directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight1">
            <summary>
            Gets the second directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight2">
            <summary>
            Gets the third directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnabled">
            <summary>
            Gets or sets the fog enable flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogStart">
            <summary>
            Gets or sets the fog start distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnd">
            <summary>
            Gets or sets the fog end distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogColor">
            <summary>
            Gets or sets the fog color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.TextureEnabled">
            <summary>
            Gets or sets whether texturing is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.Texture">
            <summary>
            Gets or sets the current texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.VertexColorEnabled">
            <summary>
            Gets or sets whether vertex color is enabled.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new BasicEffect with default parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor(Microsoft.Xna.Framework.Graphics.BasicEffect)">
            <summary>
            Creates a new BasicEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.Clone">
            <summary>
            Creates a clone of the current BasicEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.EnableDefaultLighting">
            <summary>
            Sets up the standard key/fill/back lighting rig.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.CacheEffectParameters(Microsoft.Xna.Framework.Graphics.BasicEffect)">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.DualTextureEffect">
            <summary>
            Built-in effect that supports two-layer multitexturing.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.World">
            <summary>
            Gets or sets the world matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.Projection">
            <summary>
            Gets or sets the projection matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.DiffuseColor">
            <summary>
            Gets or sets the material diffuse color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.Alpha">
            <summary>
            Gets or sets the material alpha.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.FogEnabled">
            <summary>
            Gets or sets the fog enable flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.FogStart">
            <summary>
            Gets or sets the fog start distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.FogEnd">
            <summary>
            Gets or sets the fog end distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.FogColor">
            <summary>
            Gets or sets the fog color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.Texture">
            <summary>
            Gets or sets the current base texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.Texture2">
            <summary>
            Gets or sets the current overlay texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.VertexColorEnabled">
            <summary>
            Gets or sets whether vertex color is enabled.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.DualTextureEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new DualTextureEffect with default parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.DualTextureEffect.#ctor(Microsoft.Xna.Framework.Graphics.DualTextureEffect)">
            <summary>
            Creates a new DualTextureEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.DualTextureEffect.Clone">
            <summary>
            Creates a clone of the current DualTextureEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.DualTextureEffect.CacheEffectParameters">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.DualTextureEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.EffectDirtyFlags">
            <summary>
            Track which effect parameters need to be recomputed during the next OnApply.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.EffectHelpers">
            <summary>
            Helper code shared between the various built-in effects.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EffectHelpers.EnableDefaultLighting(Microsoft.Xna.Framework.Graphics.DirectionalLight,Microsoft.Xna.Framework.Graphics.DirectionalLight,Microsoft.Xna.Framework.Graphics.DirectionalLight)">
            <summary>
            Sets up the standard key/fill/back lighting rig.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EffectHelpers.SetWorldViewProjAndFog(Microsoft.Xna.Framework.Graphics.EffectDirtyFlags,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,System.Boolean,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter)">
            <summary>
            Lazily recomputes the world+view+projection matrix and
            fog vector based on the current effect parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EffectHelpers.SetFogVector(Microsoft.Xna.Framework.Matrix@,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.EffectParameter)">
            <summary>
            Sets a vector which can be dotted with the object space vertex position to compute fog amount.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EffectHelpers.SetLightingMatrices(Microsoft.Xna.Framework.Graphics.EffectDirtyFlags,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter)">
            <summary>
            Lazily recomputes the world inverse transpose matrix and
            eye position based on the current effect parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EffectHelpers.SetMaterialColor(System.Boolean,System.Single,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter)">
            <summary>
            Sets the diffuse/emissive/alpha material color parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect">
            <summary>
            Built-in effect that supports environment mapping.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.World">
            <summary>
            Gets or sets the world matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Projection">
            <summary>
            Gets or sets the projection matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DiffuseColor">
            <summary>
            Gets or sets the material diffuse color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EmissiveColor">
            <summary>
            Gets or sets the material emissive color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Alpha">
            <summary>
            Gets or sets the material alpha.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.AmbientLightColor">
            <summary>
            Gets or sets the ambient light color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight0">
            <summary>
            Gets the first directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight1">
            <summary>
            Gets the second directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight2">
            <summary>
            Gets the third directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnabled">
            <summary>
            Gets or sets the fog enable flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogStart">
            <summary>
            Gets or sets the fog start distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnd">
            <summary>
            Gets or sets the fog end distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogColor">
            <summary>
            Gets or sets the fog color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Texture">
            <summary>
            Gets or sets the current texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMap">
            <summary>
            Gets or sets the current environment map texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapAmount">
            <summary>
            Gets or sets the amount of the environment map RGB that will be blended over 
            the base texture. Range 0 to 1, default 1. If set to zero, the RGB channels 
            of the environment map will completely ignored (but the environment map alpha 
            may still be visible if EnvironmentMapSpecular is greater than zero).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapSpecular">
            <summary>
            Gets or sets the amount of the environment map alpha channel that will 
            be added to the base texture. Range 0 to 1, default 0. This can be used 
            to implement cheap specular lighting, by encoding one or more specular 
            highlight patterns into the environment map alpha channel, then setting 
            EnvironmentMapSpecular to the desired specular light color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FresnelFactor">
            <summary>
            Gets or sets the Fresnel factor used for the environment map blending. 
            Higher values make the environment map only visible around the silhouette 
            edges of the object, while lower values make it visible everywhere. 
            Setting this property to 0 disables Fresnel entirely, making the 
            environment map equally visible regardless of view angle. The default is 
            1. Fresnel only affects the environment map RGB (the intensity of which is 
            controlled by EnvironmentMapAmount). The alpha contribution (controlled by 
            EnvironmentMapSpecular) is not affected by the Fresnel setting.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Microsoft#Xna#Framework#Graphics#IEffectLights#LightingEnabled">
            <summary>
            This effect requires lighting, so we explicitly implement
            IEffectLights.LightingEnabled, and do not allow turning it off.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new EnvironmentMapEffect with default parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor(Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect)">
            <summary>
            Creates a new EnvironmentMapEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Clone">
            <summary>
            Creates a clone of the current EnvironmentMapEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnableDefaultLighting">
            <summary>
            Sets up the standard key/fill/back lighting rig.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.CacheEffectParameters(Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect)">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.SkinnedEffect">
            <summary>
            Built-in effect for rendering skinned character models.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.World">
            <summary>
            Gets or sets the world matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.Projection">
            <summary>
            Gets or sets the projection matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.DiffuseColor">
            <summary>
            Gets or sets the material diffuse color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.EmissiveColor">
            <summary>
            Gets or sets the material emissive color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.SpecularColor">
            <summary>
            Gets or sets the material specular color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.SpecularPower">
            <summary>
            Gets or sets the material specular power.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.Alpha">
            <summary>
            Gets or sets the material alpha.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.PreferPerPixelLighting">
            <summary>
            Gets or sets the per-pixel lighting prefer flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.AmbientLightColor">
            <summary>
            Gets or sets the ambient light color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.DirectionalLight0">
            <summary>
            Gets the first directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.DirectionalLight1">
            <summary>
            Gets the second directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.DirectionalLight2">
            <summary>
            Gets the third directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.FogEnabled">
            <summary>
            Gets or sets the fog enable flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.FogStart">
            <summary>
            Gets or sets the fog start distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.FogEnd">
            <summary>
            Gets or sets the fog end distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.FogColor">
            <summary>
            Gets or sets the fog color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.Texture">
            <summary>
            Gets or sets the current texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.WeightsPerVertex">
            <summary>
            Gets or sets the number of skinning weights to evaluate for each vertex (1, 2, or 4).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.SetBoneTransforms(Microsoft.Xna.Framework.Matrix[])">
            <summary>
            Sets an array of skinning bone transform matrices.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.GetBoneTransforms(System.Int32)">
            <summary>
            Gets a copy of the current skinning bone transform matrices.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.Microsoft#Xna#Framework#Graphics#IEffectLights#LightingEnabled">
            <summary>
            This effect requires lighting, so we explicitly implement
            IEffectLights.LightingEnabled, and do not allow turning it off.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new SkinnedEffect with default parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.#ctor(Microsoft.Xna.Framework.Graphics.SkinnedEffect)">
            <summary>
            Creates a new SkinnedEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.Clone">
            <summary>
            Creates a clone of the current SkinnedEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.EnableDefaultLighting">
            <summary>
            Sets up the standard key/fill/back lighting rig.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.CacheEffectParameters(Microsoft.Xna.Framework.Graphics.SkinnedEffect)">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.SpriteEffect">
            <summary>
            The default effect used by SpriteBatch.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new SpriteEffect.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteEffect.#ctor(Microsoft.Xna.Framework.Graphics.SpriteEffect)">
            <summary>
            Creates a new SpriteEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteEffect.Clone">
            <summary>
            Creates a clone of the current SpriteEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteEffect.CacheEffectParameters">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsWideScreen">
            <summary>
            Gets a <see cref="T:System.Boolean"/> indicating whether
            <see cref="P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode"/> has a
            Width:Height ratio corresponding to a widescreen <see cref="T:Microsoft.Xna.Framework.Graphics.DisplayMode"/>.
            Common widescreen modes include 16:9, 16:10 and 2:1.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsDevice.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsAdapter,Microsoft.Xna.Framework.Graphics.GraphicsProfile,Microsoft.Xna.Framework.Graphics.PresentationParameters)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice" /> class.
            </summary>
            <param name="adapter">The graphics adapter.</param>
            <param name="graphicsProfile">The graphics profile.</param>
            <param name="presentationParameters">The presentation options.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="presentationParameters"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsDevice.DrawIndexedPrimitives(Microsoft.Xna.Framework.Graphics.PrimitiveType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw geometry by indexing into the vertex buffer.
            </summary>
            <param name="primitiveType">
            The type of primitives in the index buffer.
            </param>
            <param name="baseVertex">
            Used to offset the vertex range indexed from the vertex buffer.
            </param>
            <param name="minVertexIndex">
            A hint of the lowest vertex indexed relative to baseVertex.
            </param>
            <param name="numVertices">
            A hint of the maximum vertex indexed.
            </param>
            <param name="startIndex">
            The index within the index buffer to start drawing from.
            </param>
            <param name="primitiveCount">
            The number of primitives to render from the index buffer.
            </param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus">
            <summary>
            Describes the status of the <see cref="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus.Normal">
            <summary>
            The device is normal.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus.Lost">
            <summary>
            The device has been lost.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus.NotReset">
            <summary>
            The device has not been reset.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.GraphicsProfile">
            <summary>
            Defines a set of graphic capabilities.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.GraphicsProfile.Reach">
            <summary>
            Use a limited set of graphic features and capabilities, allowing the game to support the widest variety of devices.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.GraphicsProfile.HiDef">
            <summary>
            Use the largest available set of graphic features and capabilities to target devices, that have more enhanced graphic capabilities.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting">
            <summary>
            Called before the device is reset. Allows graphics resources to
            invalidate their state so they can be recreated after the device reset.
            Warning: This may be called after a call to Dispose() up until
            the resource is garbage collected.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)">
            <summary>
            The method that derived classes should override to implement disposing of
            managed and native resources.
            </summary>
            <param name="disposing">True if managed objects should be disposed.</param>
            <remarks>
            Native resources should always be released regardless of the value of the
            disposing parameter.
            </remarks>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.IRenderTarget">
            <summary>
            Represents a render target.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IRenderTarget.Width">
            <summary>
            Gets the width of the render target in pixels
            </summary>
            <value>The width of the render target in pixels.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IRenderTarget.Height">
            <summary>
            Gets the height of the render target in pixels
            </summary>
            <value>The height of the render target in pixels.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IRenderTarget.RenderTargetUsage">
            <summary>
            Gets the usage mode of the render target.
            </summary>
            <value>The usage mode of the render target.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IRenderTarget.DepthStencilFormat">
            <summary>
            Gets the DepthFormat of the depth-stencil buffer.
            </summary>
            <value>The DepthFormat of the DepthStencilBuffer.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IRenderTarget.DepthStencilBuffer">
            <summary>
            Gets the handle of the depth-stencil buffer.
            </summary>
            <value>The depth-stencil buffer handle.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IRenderTarget.ColorBuffer">
            <summary>
            Gets the handle of the color buffer.
            </summary>
            <value>The color buffer handle.</value>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.Model">
            <summary>
            A basic 3D model with per mesh parent bones.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Model.Bones">
            <summary>
            A collection of <see cref="T:Microsoft.Xna.Framework.Graphics.ModelBone"/> objects which describe how each mesh in the
            mesh collection for this model relates to its parent mesh.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Model.Meshes">
            <summary>
            A collection of <see cref="T:Microsoft.Xna.Framework.Graphics.ModelMesh"/> objects which compose the model. Each <see cref="T:Microsoft.Xna.Framework.Graphics.ModelMesh"/>
            in a model may be moved independently and may be composed of multiple materials
            identified as <see cref="T:Microsoft.Xna.Framework.Graphics.ModelMeshPart"/> objects.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Model.Root">
            <summary>
            Root bone for this model.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Model.Tag">
            <summary>
            Custom attached object.
            <remarks>
            Skinning data is example of attached object for model.
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Model.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelBone},System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelMesh})">
            <summary>
            Constructs a model.
            </summary>
            <param name="graphicsDevice">A valid reference to <see cref="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice"/>.</param>
            <param name="bones">The collection of bones.</param>
            <param name="meshes">The collection of meshes.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Model.Draw(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Draws the model meshes.
            </summary>
            <param name="world">The world transform.</param>
            <param name="view">The view transform.</param>
            <param name="projection">The projection transform.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Model.CopyAbsoluteBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])">
            <summary>
            Copies bone transforms relative to all parent bones of the each bone from this model to a given array.
            </summary>
            <param name="destinationBoneTransforms">The array receiving the transformed bones.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsFrom(Microsoft.Xna.Framework.Matrix[])">
            <summary>
            Copies bone transforms relative to <see cref="P:Microsoft.Xna.Framework.Graphics.Model.Root"/> bone from a given array to this model.
            </summary>
            <param name="sourceBoneTransforms">The array of prepared bone transform data.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])">
            <summary>
            Copies bone transforms relative to <see cref="P:Microsoft.Xna.Framework.Graphics.Model.Root"/> bone from this model to a given array.
            </summary>
            <param name="destinationBoneTransforms">The array receiving the transformed bones.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelBone">
            <summary>
            Represents bone data for a model.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelBone.Children">
            <summary>
            Gets a collection of bones that are children of this bone.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelBone.Index">
            <summary>
            Gets the index of this bone in the Bones collection.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelBone.Name">
            <summary>
            Gets the name of this bone.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelBone.Parent">
            <summary>
            Gets the parent of this bone.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelBone.Transform">
            <summary>
            Gets or sets the matrix used to transform this bone relative to its parent
            bone.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelBoneCollection">
            <summary>
            Represents a set of bones associated with a model.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Item(System.String)">
            <summary>
            Retrieves a ModelBone from the collection, given the name of the bone.
            </summary>
            <param name="boneName">
            The name of the bone to retrieve.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.TryGetValue(System.String,Microsoft.Xna.Framework.Graphics.ModelBone@)">
            <summary>
            Finds a bone with a given name if it exists in the collection.
            </summary>
            <param name="boneName">
            The name of the bone to find.
            </param>
            <param name="value">
            [OutAttribute] The bone named boneName, if found.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.GetEnumerator">
            <summary>
            Returns a ModelMeshCollection.Enumerator that can iterate through a ModelMeshCollection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator">
            <summary>
            Provides the ability to iterate through the bones in an ModelMeshCollection.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Current">
            <summary>
            Gets the current element in the ModelMeshCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the ModelMeshCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelEffectCollection">
            <summary>
            Represents a collection of effects associated with a model.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelEffectCollection.GetEnumerator">
            <summary>
            Returns a ModelEffectCollection.Enumerator that can iterate through a ModelEffectCollection.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelEffectCollection.Enumerator">
            <summary>
            Provides the ability to iterate through the bones in an ModelEffectCollection.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelEffectCollection.Enumerator.Current">
            <summary>
            Gets the current element in the ModelEffectCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelEffectCollection.Enumerator.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelEffectCollection.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the ModelEffectCollection.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelMesh">
            <summary>
            Represents a mesh that is part of a Model.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMesh.BoundingSphere">
            <summary>
            Gets the BoundingSphere that contains this mesh.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMesh.Effects">
            <summary>
            Gets a collection of effects associated with this mesh.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMesh.MeshParts">
            <summary>
            Gets the ModelMeshPart objects that make up this mesh. Each part of a mesh
            is composed of a set of primitives that share the same material.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMesh.Name">
            <summary>
            Gets the name of this mesh.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMesh.ParentBone">
            <summary>
            Gets the parent bone for this mesh. The parent bone of a mesh contains a
            transformation matrix that describes how the mesh is located relative to
            any parent meshes in a model.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMesh.Tag">
            <summary>
            Gets or sets an object identifying this mesh.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelMesh.Draw">
            <summary>
            Draws all of the ModelMeshPart objects in this mesh, using their current
            Effect settings.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelMeshCollection">
            <summary>
            Represents a collection of ModelMesh objects.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.Item(System.String)">
            <summary>
            Retrieves a ModelMesh from the collection, given the name of the mesh.
            </summary>
            <param name="meshName">
            The name of the mesh to retrieve.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.TryGetValue(System.String,Microsoft.Xna.Framework.Graphics.ModelMesh@)">
            <summary>
            Finds a mesh with a given name if it exists in the collection.
            </summary>
            <param name="meshName">
            The name of the mesh to find.
            </param>
            <param name="value">
            [OutAttribute] The mesh named meshName, if found.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.GetEnumerator">
            <summary>
            Returns a ModelMeshCollection.Enumerator that can iterate through a ModelMeshCollection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.Enumerator">
            <summary>
            Provides the ability to iterate through the bones in an ModelMeshCollection.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.Enumerator.Current">
            <summary>
            Gets the current element in the ModelMeshCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the ModelMeshCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.Enumerator.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshPart.Effect">
            <summary>
            Gets or sets the material Effect for this mesh part.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshPart.IndexBuffer">
            <summary>
            Gets the index buffer for this mesh part.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshPart.NumVertices">
            <summary>
            Gets the number of vertices used during a draw call.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshPart.PrimitiveCount">
            <summary>
            Gets the number of primitives to render.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshPart.StartIndex">
            <summary>
            Gets the location in the index array at which to start reading vertices.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshPart.Tag">
            <summary>
            Gets or sets an object identifying this model mesh part.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshPart.VertexBuffer">
            <summary>
            Gets the vertex buffer for this mesh part.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshPart.VertexOffset">
            <summary>
            Gets the offset (in vertices) from the top of vertex buffer.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshPartCollection.Enumerator.Current">
            <summary>
            Gets the current element in the ModelMeshCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelMeshPartCollection.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the ModelMeshCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelMeshPartCollection.Enumerator.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8">
            <summary>
            Packed vector type containing unsigned normalized values ranging from 0 to 1. 
            The x and z components use 5 bits, and the y component uses 6 bits.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.PackedValue">
            <summary>
            Gets and sets the packed value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.#ctor(System.Single)">
            <summary>
            Creates a new instance of Alpha8.
            </summary>
            <param name="alpha">The alpha component</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.ToAlpha">
            <summary>
            Gets the packed vector in float format.
            </summary>
            <returns>The packed vector in Vector3 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed vector from a Vector4.
            </summary>
            <param name="vector">Vector containing the components.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Gets the packed vector in Vector4 format.
            </summary>
            <returns>The packed vector in Vector4 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.Equals(System.Object)">
            <summary>
            Compares an object with the packed vector.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if the object is equal to the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8)">
            <summary>
            Compares another Bgra5551 packed vector with the packed vector.
            </summary>
            <param name="other">The Bgra5551 packed vector to compare.</param>
            <returns>True if the packed vectors are equal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
            <returns>A string representation of the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8.GetHashCode">
            <summary>
            Gets a hash code of the packed vector.
            </summary>
            <returns>The hash code for the packed vector.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565">
            <summary>
            Packed vector type containing unsigned normalized values ranging from 0 to 1. 
            The x and z components use 5 bits, and the y component uses 6 bits.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.PackedValue">
            <summary>
            Gets and sets the packed value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of Bgr565.
            </summary>
            <param name="x">The x component</param>
            <param name="y">The y component</param>
            <param name="z">The z component</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.#ctor(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new instance of Bgr565.
            </summary>
            <param name="vector">
            Vector containing the components for the packed vector.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.ToVector3">
            <summary>
            Gets the packed vector in Vector3 format.
            </summary>
            <returns>The packed vector in Vector3 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed vector from a Vector4.
            </summary>
            <param name="vector">Vector containing the components.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Gets the packed vector in Vector4 format.
            </summary>
            <returns>The packed vector in Vector4 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Equals(System.Object)">
            <summary>
            Compares an object with the packed vector.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if the object is equal to the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565)">
            <summary>
            Compares another Bgr565 packed vector with the packed vector.
            </summary>
            <param name="other">The Bgr565 packed vector to compare.</param>
            <returns>True if the packed vectors are equal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
            <returns>A string representation of the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.GetHashCode">
            <summary>
            Gets a hash code of the packed vector.
            </summary>
            <returns>The hash code for the packed vector.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444">
            <summary>
            Packed vector type containing unsigned normalized values, ranging from 0 to 1, using
            4 bits each for x, y, z, and w.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.PackedValue">
            <summary>
            Gets and sets the packed value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of Bgra4444.
            </summary>
            <param name="x">The x component</param>
            <param name="y">The y component</param>
            <param name="z">The z component</param>
            <param name="w">The w component</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new instance of Bgra4444.
            </summary>
            <param name="vector">
            Vector containing the components for the packed vector.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.ToVector4">
            <summary>
            Gets the packed vector in Vector4 format.
            </summary>
            <returns>The packed vector in Vector4 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed vector from a Vector4.
            </summary>
            <param name="vector">Vector containing the components.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.Equals(System.Object)">
            <summary>
            Compares an object with the packed vector.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if the object is equal to the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444)">
            <summary>
            Compares another Bgra4444 packed vector with the packed vector.
            </summary>
            <param name="other">The Bgra4444 packed vector to compare.</param>
            <returns>True if the packed vectors are equal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
            <returns>A string representation of the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.GetHashCode">
            <summary>
            Gets a hash code of the packed vector.
            </summary>
            <returns>The hash code for the packed vector.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551">
            <summary>
            Packed vector type containing unsigned normalized values ranging from 0 to 1. 
            The x and z components use 5 bits, and the y component uses 6 bits.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.PackedValue">
            <summary>
            Gets and sets the packed value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of Bgra5551.
            </summary>
            <param name="x">The x component</param>
            <param name="y">The y component</param>
            <param name="z">The z component</param>
            <param name="w">The w component</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new instance of Bgra5551.
            </summary>
            <param name="vector">
            Vector containing the components for the packed vector.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.ToVector4">
            <summary>
            Gets the packed vector in Vector4 format.
            </summary>
            <returns>The packed vector in Vector4 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed vector from a Vector4.
            </summary>
            <param name="vector">Vector containing the components.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.Equals(System.Object)">
            <summary>
            Compares an object with the packed vector.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if the object is equal to the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551)">
            <summary>
            Compares another Bgra5551 packed vector with the packed vector.
            </summary>
            <param name="other">The Bgra5551 packed vector to compare.</param>
            <returns>True if the packed vectors are equal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
            <returns>A string representation of the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551.GetHashCode">
            <summary>
            Gets a hash code of the packed vector.
            </summary>
            <returns>The hash code for the packed vector.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4">
            <summary>
            Packed vector type containing four 8-bit unsigned integer values, ranging from 0 to 255.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the value.
            </summary>
            <value>The packed representation of the value.</value>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Initializes a new instance of the Byte4 class.
            </summary>
            <param name="vector">
            A vector containing the initial values for the components of the Byte4 structure.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the Byte4 class.
            </summary>
            <param name="x">Initial value for the x component.</param>
            <param name="y">Initial value for the y component.</param>
            <param name="z">Initial value for the z component.</param>
            <param name="w">Initial value for the w component.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
            <returns>The expanded vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
            <param name="vector">The vector to create the packed representation from.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)">
            <summary>
            Compares the current instance of a class to another instance to determine
            whether they are different.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>True if the objects are different; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)">
            <summary>
            Compares the current instance of a class to another instance to determine
            whether they are the same.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>True if the objects are the same; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a
            specified object.
            </summary>
            <param name="obj">The object with which to make the comparison.</param>
            <returns>
            True if the current instance is equal to the specified object; false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a
            specified object.
            </summary>
            <param name="other">The object with which to make the comparison.</param>
            <returns>
            True if the current instance is equal to the specified object; false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.GetHashCode">
            <summary>
            Gets the hash code for the current instance.
            </summary>
            <returns>Hash code for the instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToString">
            <summary>
            Returns a string representation of the current instance.
            </summary>
            <returns>String that represents the object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Pack(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Packs a vector into a uint.
            </summary>
            <param name="vector">The vector containing the values to pack.</param>
            <returns>The ulong containing the packed values.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4">
            <summary>
            Packed vector type containing four 16-bit floating-point values.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the value.
            </summary>
            <value>The packed representation of the value.</value>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the HalfVector4 structure.
            </summary>
            <param name="x">Initial value for the x component.</param>
            <param name="y">Initial value for the y component.</param>
            <param name="z">Initial value for the z component.</param>
            <param name="w">Initial value for the q component.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Initializes a new instance of the HalfVector4 structure.
            </summary>
            <param name="vector">
            A vector containing the initial values for the components of the HalfVector4
            structure.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
            <returns>The expanded vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
            <param name="vector">The vector to create the packed representation from.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.ToString">
            <summary>
            Returns a string representation of the current instance.
            </summary>
            <returns>String that represents the object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.GetHashCode">
            <summary>
            Gets the hash code for the current instance.
            </summary>
            <returns>Hash code for the instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a
            specified object.
            </summary>
            <param name="obj">The object with which to make the comparison.</param>
            <returns>
            True if the current instance is equal to the specified object; false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a
            specified object.
            </summary>
            <param name="other">The object with which to make the comparison.</param>
            <returns>
            True if the current instance is equal to the specified object; false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4,Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4)">
            <summary>
            Compares the current instance of a class to another instance to determine
            whether they are the same.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>True if the objects are the same; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4,Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4)">
            <summary>
            Compares the current instance of a class to another instance to determine
            whether they are different.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>True if the objects are different; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.Pack(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Packs a vector into a ulong.
            </summary>
            <param name="vector">The vector containing the values to pack.</param>
            <returns>The ulong containing the packed values.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32">
            <summary>
            Packed vector type containing unsigned normalized values ranging from 0 to 1. 
            The x and z components use 5 bits, and the y component uses 6 bits.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.PackedValue">
            <summary>
            Gets and sets the packed value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.#ctor(System.Single,System.Single)">
            <summary>
            Creates a new instance of Rg32.
            </summary>
            <param name="x">The x component</param>
            <param name="y">The y component</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.#ctor(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new instance of Rg32.
            </summary>
            <param name="vector">
            Vector containing the components for the packed vector.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.ToVector2">
            <summary>
            Gets the packed vector in Vector2 format.
            </summary>
            <returns>The packed vector in Vector2 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed vector from a Vector4.
            </summary>
            <param name="vector">Vector containing the components.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Gets the packed vector in Vector4 format.
            </summary>
            <returns>The packed vector in Vector4 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.Equals(System.Object)">
            <summary>
            Compares an object with the packed vector.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if the object is equal to the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Rg32)">
            <summary>
            Compares another Rg32 packed vector with the packed vector.
            </summary>
            <param name="other">The Rg32 packed vector to compare.</param>
            <returns>True if the packed vectors are equal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
            <returns>A string representation of the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rg32.GetHashCode">
            <summary>
            Gets a hash code of the packed vector.
            </summary>
            <returns>The hash code for the packed vector.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64">
            <summary>
            Packed vector type containing unsigned normalized values ranging from 0 to 1. 
            The x and z components use 5 bits, and the y component uses 6 bits.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.PackedValue">
            <summary>
            Gets and sets the packed value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of Rgba64.
            </summary>
            <param name="x">The x component</param>
            <param name="y">The y component</param>
            <param name="z">The z component</param>
            <param name="w">The w component</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new instance of Rgba64.
            </summary>
            <param name="vector">
            Vector containing the components for the packed vector.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.ToVector4">
            <summary>
            Gets the packed vector in Vector4 format.
            </summary>
            <returns>The packed vector in Vector4 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed vector from a Vector4.
            </summary>
            <param name="vector">Vector containing the components.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.Equals(System.Object)">
            <summary>
            Compares an object with the packed vector.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if the object is equal to the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64)">
            <summary>
            Compares another Rgba64 packed vector with the packed vector.
            </summary>
            <param name="other">The Rgba64 packed vector to compare.</param>
            <returns>True if the packed vectors are equal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
            <returns>A string representation of the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64.GetHashCode">
            <summary>
            Gets a hash code of the packed vector.
            </summary>
            <returns>The hash code for the packed vector.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102">
            <summary>
            Packed vector type containing unsigned normalized values ranging from 0 to 1. 
            The x and z components use 5 bits, and the y component uses 6 bits.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.PackedValue">
            <summary>
            Gets and sets the packed value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of Rgba1010102.
            </summary>
            <param name="x">The x component</param>
            <param name="y">The y component</param>
            <param name="z">The z component</param>
            <param name="w">The w component</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new instance of Rgba1010102.
            </summary>
            <param name="vector">
            Vector containing the components for the packed vector.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.ToVector4">
            <summary>
            Gets the packed vector in Vector4 format.
            </summary>
            <returns>The packed vector in Vector4 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed vector from a Vector4.
            </summary>
            <param name="vector">Vector containing the components.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.Equals(System.Object)">
            <summary>
            Compares an object with the packed vector.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if the object is equal to the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102)">
            <summary>
            Compares another Rgba1010102 packed vector with the packed vector.
            </summary>
            <param name="other">The Rgba1010102 packed vector to compare.</param>
            <returns>True if the packed vectors are equal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
            <returns>A string representation of the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102.GetHashCode">
            <summary>
            Gets a hash code of the packed vector.
            </summary>
            <returns>The hash code for the packed vector.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Short4">
            <summary>
            Packed vector type containing four 16-bit signed integer values.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the value.
            </summary>
            <value>The packed representation of the value.</value>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Initializes a new instance of the Short4 class.
            </summary>
            <param name="vector">
            A vector containing the initial values for the components of the Short4 structure.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the Short4 class.
            </summary>
            <param name="x">Initial value for the x component.</param>
            <param name="y">Initial value for the y component.</param>
            <param name="z">Initial value for the z component.</param>
            <param name="w">Initial value for the w component.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
            <returns>The expanded vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
            <param name="vector">The vector to create the packed representation from.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Short4,Microsoft.Xna.Framework.Graphics.PackedVector.Short4)">
            <summary>
            Compares the current instance of a class to another instance to determine
            whether they are different.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>True if the objects are different; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Short4,Microsoft.Xna.Framework.Graphics.PackedVector.Short4)">
            <summary>
            Compares the current instance of a class to another instance to determine
            whether they are the same.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>True if the objects are the same; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a
            specified object.
            </summary>
            <param name="obj">The object with which to make the comparison.</param>
            <returns>
            True if the current instance is equal to the specified object; false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Short4)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a
            specified object.
            </summary>
            <param name="other">The object with which to make the comparison.</param>
            <returns>
            True if the current instance is equal to the specified object; false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.GetHashCode">
            <summary>
            Gets the hash code for the current instance.
            </summary>
            <returns>Hash code for the instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.ToString">
            <summary>
            Returns a string representation of the current instance.
            </summary>
            <returns>String that represents the object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.Pack(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Packs a vector into a ulong.
            </summary>
            <param name="vector">The vector containing the values to pack.</param>
            <returns>The ulong containing the packed values.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PresentInterval">
            <summary>
            Defines how <see cref="M:Microsoft.Xna.Framework.Graphics.GraphicsDevice.Present"/> updates the game window.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PresentInterval.Default">
            <summary>
            Equivalent to <see cref="F:Microsoft.Xna.Framework.Graphics.PresentInterval.One"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PresentInterval.One">
            <summary>
            The driver waits for the vertical retrace period, before updating window client area. Present operations are not affected more frequently than the screen refresh rate.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PresentInterval.Two">
            <summary>
            The driver waits for the vertical retrace period, before updating window client area. Present operations are not affected more frequently than every second screen refresh.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PresentInterval.Immediate">
            <summary>
            The driver updates the window client area immediately. Present operations might be affected immediately. There is no limit for framerate.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PrimitiveType">
            <summary>
            Defines how vertex data is ordered.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleList">
            <summary>
            Renders the specified vertices as a sequence of isolated triangles. Each group of three vertices defines a separate triangle. Back-face culling is affected by the current winding-order render state.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleStrip">
            <summary>
            Renders the vertices as a triangle strip. The back-face culling flag is flipped automatically on even-numbered triangles.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PrimitiveType.LineList">
            <summary>
            Renders the vertices as a list of isolated straight line segments; the count may be any positive integer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PrimitiveType.LineStrip">
            <summary>
            Renders the vertices as a single polyline; the count may be any positive integer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PrimitiveType.PointListEXT">
            <summary>
            Treats each vertex as a single point. Vertex n defines point n. N points are drawn.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTarget2D.Microsoft#Xna#Framework#Graphics#IRenderTarget#DepthStencilBuffer">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTarget2D.Microsoft#Xna#Framework#Graphics#IRenderTarget#ColorBuffer">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.RenderTargetCube">
            <summary>
            Represents a texture cube that can be used as a render target.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.DepthStencilFormat">
            <summary>
            Gets the depth-stencil buffer format of this render target.
            </summary>
            <value>The format of the depth-stencil buffer.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.MultiSampleCount">
            <summary>
            Gets the number of multisample locations.
            </summary>
            <value>The number of multisample locations.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.RenderTargetUsage">
            <summary>
            Gets the usage mode of this render target.
            </summary>
            <value>The usage mode of the render target.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.Microsoft#Xna#Framework#Graphics#IRenderTarget#Width">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.Microsoft#Xna#Framework#Graphics#IRenderTarget#Height">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.Microsoft#Xna#Framework#Graphics#IRenderTarget#DepthStencilBuffer">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.Microsoft#Xna#Framework#Graphics#IRenderTarget#ColorBuffer">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.RenderTargetCube.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat,Microsoft.Xna.Framework.Graphics.DepthFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Graphics.RenderTargetCube"/> class.
            </summary>
            <param name="graphicsDevice">The graphics device.</param>
            <param name="size">The width and height of a texture cube face in pixels.</param>
            <param name="mipMap">
            <see langword="true"/> to generate a full mipmap chain; otherwise <see langword="false"/>.
            </param>
            <param name="preferredFormat">The preferred format of the surface.</param>
            <param name="preferredDepthFormat">The preferred format of the depth-stencil buffer.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.RenderTargetCube.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat,Microsoft.Xna.Framework.Graphics.DepthFormat,System.Int32,Microsoft.Xna.Framework.Graphics.RenderTargetUsage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Graphics.RenderTargetCube"/> class.
            </summary>
            <param name="graphicsDevice">The graphics device.</param>
            <param name="size">The width and height of a texture cube face in pixels.</param>
            <param name="mipMap">
            <see langword="true"/> to generate a full mipmap chain; otherwise <see langword="false"/>.
            </param>
            <param name="preferredFormat">The preferred format of the surface.</param>
            <param name="preferredDepthFormat">The preferred format of the depth-stencil buffer.</param>
            <param name="preferredMultiSampleCount">The preferred number of multisample locations.</param>
            <param name="usage">The usage mode of the render target.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.RenderTargetCube.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by an instance of the
            <see cref="T:Microsoft.Xna.Framework.Graphics.RenderTargetCube"/> class and optionally releases the managed
            resources.
            </summary>
            <param name="disposing">
            <see langword="true"/> to release both managed and unmanaged resources;
            <see langword="false"/> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.RenderTargetUsage">
            <summary>
            Defines if the previous content in a render target is preserved when it set on the graphics device.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.RenderTargetUsage.DiscardContents">
            <summary>
            The render target content will not be preserved.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.RenderTargetUsage.PreserveContents">
            <summary>
            The render target content will be preserved even if it is slow or requires extra memory.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.RenderTargetUsage.PlatformContents">
            <summary>
            The render target content might be preserved if the platform can do so without a penalty in performance or memory usage.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ResourceCreatedEventArgs.Resource">
            <summary>
            The newly created resource object.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs.Name">
            <summary>
            The name of the destroyed resource.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs.Tag">
            <summary>
            The resource manager tag of the destroyed resource.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.SetDataOptions">
            <summary>
            Defines how vertex or index buffer data will be flushed during a SetData operation.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SetDataOptions.None">
            <summary>
            The SetData can overwrite the portions of existing data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SetDataOptions.Discard">
            <summary>
            The SetData will discard the entire buffer. A pointer to a new memory area is returned and rendering from the previous area do not stall.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SetDataOptions.NoOverwrite">
            <summary>
            The SetData operation will not overwrite existing data. This allows the driver to return immediately from a SetData operation and continue rendering.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.SpriteEffects">
            <summary>
            Defines sprite visual options for mirroring.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteEffects.None">
            <summary>
            No options specified.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteEffects.FlipHorizontally">
            <summary>
            Render the sprite reversed along the X axis.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteEffects.FlipVertically">
            <summary>
            Render the sprite reversed along the Y axis.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.SpriteSortMode">
            <summary>
            Defines sprite sort rendering options.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.Deferred">
            <summary>
            All sprites are drawing when <see cref="M:Microsoft.Xna.Framework.Graphics.SpriteBatch.End"/> invokes, in order of draw call sequence. Depth is ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.Immediate">
            <summary>
            Each sprite is drawing at individual draw call, instead of <see cref="M:Microsoft.Xna.Framework.Graphics.SpriteBatch.End"/>. Depth is ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.Texture">
            <summary>
            Same as <see cref="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.Deferred"/>, except sprites are sorted by texture prior to drawing. Depth is ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.BackToFront">
            <summary>
            Same as <see cref="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.Deferred"/>, except sprites are sorted by depth in back-to-front order prior to drawing.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.FrontToBack">
            <summary>
            Same as <see cref="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.Deferred"/>, except sprites are sorted by depth in front-to-back order prior to drawing.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.Blend">
            <summary>
            Defines a blend mode.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.One">
            <summary>
            Each component of the color is multiplied by {1, 1, 1, 1}.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.Zero">
            <summary>
            Each component of the color is multiplied by {0, 0, 0, 0}.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.SourceColor">
            <summary>
            Each component of the color is multiplied by the source color.
            {Rs, Gs, Bs, As}, where Rs, Gs, Bs, As are color source values.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.InverseSourceColor">
            <summary>
            Each component of the color is multiplied by the inverse of the source color.
            {1 - Rs, 1 - Gs, 1 - Bs, 1 - As}, where Rs, Gs, Bs, As are color source values.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.SourceAlpha">
            <summary>
            Each component of the color is multiplied by the alpha value of the source.
            {As, As, As, As}, where As is the source alpha value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.InverseSourceAlpha">
            <summary>
            Each component of the color is multiplied by the inverse of the alpha value of the source.
            {1 - As, 1 - As, 1 - As, 1 - As}, where As is the source alpha value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.DestinationColor">
            <summary>
            Each component color is multiplied by the destination color.
            {Rd, Gd, Bd, Ad}, where Rd, Gd, Bd, Ad are color destination values.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.InverseDestinationColor">
            <summary>
            Each component of the color is multiplied by the inversed destination color.
            {1 - Rd, 1 - Gd, 1 - Bd, 1 - Ad}, where Rd, Gd, Bd, Ad are color destination values.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.DestinationAlpha">
            <summary>
            Each component of the color is multiplied by the alpha value of the destination.
            {Ad, Ad, Ad, Ad}, where Ad is the destination alpha value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.InverseDestinationAlpha">
            <summary>
            Each component of the color is multiplied by the inversed alpha value of the destination.
            {1 - Ad, 1 - Ad, 1 - Ad, 1 - Ad}, where Ad is the destination alpha value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.BlendFactor">
            <summary>
            Each component of the color is multiplied by a constant in the <see cref="P:Microsoft.Xna.Framework.Graphics.GraphicsDevice.BlendFactor"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.InverseBlendFactor">
            <summary>
            Each component of the color is multiplied by a inversed constant in the <see cref="P:Microsoft.Xna.Framework.Graphics.GraphicsDevice.BlendFactor"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Blend.SourceAlphaSaturation">
            <summary>
            Each component of the color is multiplied by either the alpha of the source color, or the inverse of the alpha of the source color, whichever is greater.
            {f, f, f, 1}, where f = min(As, 1 - As), where As is the source alpha value.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.BlendFunction">
            <summary>
            Defines a function for color blending.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BlendFunction.Add">
            <summary>
            The function will add destination to the source. (srcColor * srcBlend) + (destColor * destBlend)
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BlendFunction.Subtract">
            <summary>
            The function will subtract destination from source. (srcColor * srcBlend) - (destColor * destBlend)
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BlendFunction.ReverseSubtract">
            <summary>
            The function will subtract source from destination. (destColor * destBlend) - (srcColor * srcBlend)
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BlendFunction.Max">
            <summary>
            The function will extract minimum of the source and destination. min((srcColor * srcBlend),(destColor * destBlend))
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BlendFunction.Min">
            <summary>
            The function will extract maximum of the source and destination. max((srcColor * srcBlend),(destColor * destBlend))
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.CompareFunction">
            <summary>
            The comparison function used for depth, stencil, and alpha tests.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.Always">
            <summary>
            Always passes the test.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.Never">
            <summary>
            Never passes the test.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.Less">
            <summary>
            Passes the test when the new pixel value is less than current pixel value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.LessEqual">
            <summary>
            Passes the test when the new pixel value is less than or equal to current pixel value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.Equal">
            <summary>
            Passes the test when the new pixel value is equal to current pixel value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.GreaterEqual">
            <summary>
            Passes the test when the new pixel value is greater than or equal to current pixel value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.Greater">
            <summary>
            Passes the test when the new pixel value is greater than current pixel value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CompareFunction.NotEqual">
            <summary>
            Passes the test when the new pixel value does not equal to current pixel value.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.CullMode">
            <summary>
            Defines a culling mode for faces in rasterization process.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CullMode.None">
            <summary>
            Do not cull faces.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CullMode.CullClockwiseFace">
            <summary>
            Cull faces with clockwise order.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.CullMode.CullCounterClockwiseFace">
            <summary>
            Cull faces with counter clockwise order.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.FillMode">
            <summary>
            Defines options for filling the primitive.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.FillMode.Solid">
            <summary>
            Draw solid faces for each primitive.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.FillMode.WireFrame">
            <summary>
            Draw lines for each primitive.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.StencilOperation">
            <summary>
            Defines stencil buffer operations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Keep">
            <summary>
            Does not update the stencil buffer entry.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Zero">
            <summary>
            Sets the stencil buffer entry to 0.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Replace">
            <summary>
            Replaces the stencil buffer entry with a reference value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Increment">
            <summary>
            Increments the stencil buffer entry, wrapping to 0 if the new value exceeds the maximum value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Decrement">
            <summary>
            Decrements the stencil buffer entry, wrapping to the maximum value if the new value is less than 0.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.IncrementSaturation">
            <summary>
            Increments the stencil buffer entry, clamping to the maximum value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.DecrementSaturation">
            <summary>
            Decrements the stencil buffer entry, clamping to 0.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.StencilOperation.Invert">
            <summary>
            Inverts the bits in the stencil buffer entry.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.TextureAddressMode">
            <summary>
            Defines modes for addressing texels using texture coordinates that are outside of the range of 0.0 to 1.0.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureAddressMode.Wrap">
            <summary>
            Texels outside range will form the tile at every integer junction.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureAddressMode.Clamp">
            <summary>
            Texels outside range will be setted to color of 0.0 or 1.0 texel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureAddressMode.Mirror">
            <summary>
            Same as <see cref="F:Microsoft.Xna.Framework.Graphics.TextureAddressMode.Wrap"/> but tiles will also flipped at every integer junction.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.TextureFilter">
            <summary>
            Defines filtering types for texture sampler.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.Linear">
            <summary>
            Use linear filtering.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.Point">
            <summary>
            Use point filtering.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.Anisotropic">
            <summary>
            Use anisotropic filtering.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.LinearMipPoint">
            <summary>
            Use linear filtering to shrink or expand, and point filtering between mipmap levels (mip).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.PointMipLinear">
            <summary>
            Use point filtering to shrink (minify) or expand (magnify), and linear filtering between mipmap levels.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.MinLinearMagPointMipLinear">
            <summary>
            Use linear filtering to shrink, point filtering to expand, and linear filtering between mipmap levels.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.MinLinearMagPointMipPoint">
            <summary>
            Use linear filtering to shrink, point filtering to expand, and point filtering between mipmap levels.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.MinPointMagLinearMipLinear">
            <summary>
            Use point filtering to shrink, linear filtering to expand, and linear filtering between mipmap levels.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.TextureFilter.MinPointMagLinearMipPoint">
            <summary>
            Use point filtering to shrink, linear filtering to expand, and point filtering between mipmap levels.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.SurfaceFormat">
            <summary>
            Defines types of surface formats.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Color">
            <summary>
            Unsigned 32-bit ARGB pixel format for store 8 bits per channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Bgr565">
            <summary>
            Unsigned 16-bit BGR pixel format for store 5 bits for blue, 6 bits for green, and 5 bits for red.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Bgra5551">
            <summary>
            Unsigned 16-bit BGRA pixel format where 5 bits reserved for each color and last bit is reserved for alpha.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Bgra4444">
            <summary>
            Unsigned 16-bit BGRA pixel format for store 4 bits per channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Dxt1">
            <summary>
            DXT1. Texture format with compression. Surface dimensions must be a multiple 4.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Dxt3">
            <summary>
            DXT3. Texture format with compression. Surface dimensions must be a multiple 4.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Dxt5">
            <summary>
            DXT5. Texture format with compression. Surface dimensions must be a multiple 4.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.NormalizedByte2">
            <summary>
            Signed 16-bit bump-map format for store 8 bits for <c>u</c> and <c>v</c> data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.NormalizedByte4">
            <summary>
            Signed 16-bit bump-map format for store 8 bits per channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Rgba1010102">
            <summary>
            Unsigned 32-bit RGBA pixel format for store 10 bits for each color and 2 bits for alpha.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Rg32">
            <summary>
            Unsigned 32-bit RG pixel format using 16 bits per channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Rgba64">
            <summary>
            Unsigned 64-bit RGBA pixel format using 16 bits per channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Alpha8">
            <summary>
            Unsigned A 8-bit format for store 8 bits to alpha channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Single">
            <summary>
            IEEE 32-bit R float format for store 32 bits to red channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Vector2">
            <summary>
            IEEE 64-bit RG float format for store 32 bits per channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.Vector4">
            <summary>
            IEEE 128-bit RGBA float format for store 32 bits per channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.HalfSingle">
            <summary>
            Float 16-bit R format for store 16 bits to red channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.HalfVector2">
            <summary>
            Float 32-bit RG format for store 16 bits per channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.HalfVector4">
            <summary>
            Float 64-bit ARGB format for store 16 bits per channel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.HdrBlendable">
            <summary>
            Float pixel format for high dynamic range data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SurfaceFormat.ColorBgraEXT">
            <summary>
            Unsigned 32-bit ABGR pixel format for store 8 bits per channel (XNA3)
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Texture2D.TextureDataFromStreamEXT(System.IO.Stream,System.Int32@,System.Int32@,System.Byte[]@,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Loads image data from a given stream.
            </summary>
            <remarks>
            This is an extension of XNA 4 and is not compatible with XNA. It exists to help with dynamically reloading
            textures while games are running. Games can use this method to read a stream into memory and then call
            SetData on a texture with that data, rather than having to dispose the texture and recreate it entirely.
            </remarks>
            <param name="stream">The stream from which to read the image data.</param>
            <param name="width">Outputs the width of the image.</param>
            <param name="height">Outputs the height of the image.</param>
            <param name="pixels">Outputs the pixel data of the image, in non-premultiplied RGBA format.</param>
            <param name="requestedWidth">Preferred width of the resulting image data</param>
            <param name="requestedHeight">Preferred height of the resulting image data</param>
            <param name="zoom">false to maintain aspect ratio, true to crop image</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(``0[])">
            <summary>
            Gets a copy of 3D texture data.
            </summary>
            <typeparam name="T">The type of the elements in the array.</typeparam>
            <param name="data">Array of data.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(``0[],System.Int32,System.Int32)">
            <summary>
            Gets a copy of 3D texture data, specifying a start index and number of elements.
            </summary>
            <typeparam name="T">The type of the elements in the array.</typeparam>
            <param name="data">Array of data.</param>
            <param name="startIndex">Index of the first element to get.</param>
            <param name="elementCount">Number of elements to get.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)">
            <summary>
            Gets a copy of 3D texture data, specifying a mipmap level, source box, start index, and number of elements.
            </summary>
            <typeparam name="T">The type of the elements in the array.</typeparam>
            <param name="level">Mipmap level.</param>
            <param name="left">Position of the left side of the box on the x-axis.</param>
            <param name="top">Position of the top of the box on the y-axis.</param>
            <param name="right">Position of the right side of the box on the x-axis.</param>
            <param name="bottom">Position of the bottom of the box on the y-axis.</param>
            <param name="front">Position of the front of the box on the z-axis.</param>
            <param name="back">Position of the back of the box on the z-axis.</param>
            <param name="data">Array of data.</param>
            <param name="startIndex">Index of the first element to get.</param>
            <param name="elementCount">Number of elements to get.</param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.TextureCube.Size">
            <summary>
            Gets the width and height of the cube map face in pixels.
            </summary>
            <value>The width and height of a cube map face in pixels.</value>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.BufferUsage">
            <summary>
            A usage hint for optimizing memory placement of graphics buffers.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BufferUsage.None">
            <summary>
            No special usage.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BufferUsage.WriteOnly">
            <summary>
            The buffer will not be readable and will be optimized for rendering and writing.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.IndexBuffer.GraphicsDeviceResetting">
            <summary>
            The GraphicsDevice is resetting, so GPU resources must be recreated.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.IndexBuffer.SizeForType(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Type)">
            <summary>
            Gets the relevant IndexElementSize enum value for the given type.
            </summary>
            <param name="graphicsDevice">The graphics device.</param>
            <param name="type">The type to use for the index buffer</param>
            <returns>The IndexElementSize enum value that matches the type</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.IndexElementSize">
            <summary>
            Defines size for index in <see cref="T:Microsoft.Xna.Framework.Graphics.IndexBuffer"/> and <see cref="T:Microsoft.Xna.Framework.Graphics.DynamicIndexBuffer"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.IndexElementSize.SixteenBits">
            <summary>
            16-bit short/ushort value been used.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.IndexElementSize.ThirtyTwoBits">
            <summary>
            32-bit int/uint value been used.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.VertexBuffer.GraphicsDeviceResetting">
            <summary>
            The GraphicsDevice is resetting, so GPU resources must be recreated.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.VertexBufferBinding.InstanceFrequency">
            <summary>
            Gets the instance frequency. A value of 0 means no instancing.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.VertexBufferBinding.VertexBuffer">
            <summary>
            Gets the vertex buffer.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.VertexBufferBinding.VertexOffset">
            <summary>
            Gets the offset in bytes from the beginning of the vertex buffer to the first vertex to use.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexBufferBinding.None">
            <summary>
            A null vertex buffer binding for unused vertex buffer slots.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.VertexBufferBinding.#ctor(Microsoft.Xna.Framework.Graphics.VertexBuffer)">
            <summary>
            Creates an instance of VertexBufferBinding.
            </summary>
            <param name="vertexBuffer">The vertex buffer to bind.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.VertexBufferBinding.#ctor(Microsoft.Xna.Framework.Graphics.VertexBuffer,System.Int32)">
            <summary>
            Creates an instance of VertexBufferBinding.
            </summary>
            <param name="vertexBuffer">The vertex buffer to bind.</param>
            <param name="vertexOffset">The offset in bytes to the first vertex to use.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.VertexBufferBinding.#ctor(Microsoft.Xna.Framework.Graphics.VertexBuffer,System.Int32,System.Int32)">
            <summary>
            Creates an instance of VertexBufferBinding.
            </summary>
            <param name="vertexBuffer">The vertex buffer to bind.</param>
            <param name="vertexOffset">The offset in bytes to the first vertex to use.</param>
            <param name="instanceFrequency">Number of instances to draw for each draw call. Use 0 if not using instanced drawing.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.VertexDeclaration.FromType(System.Type)">
            <summary>
            Returns the VertexDeclaration for Type.
            </summary>
            <param name="vertexType">A value type which implements the IVertexType interface.</param>
            <returns>The VertexDeclaration.</returns>
            <remarks>
            Prefer to use VertexDeclarationCache when the declaration lookup
            can be performed with a templated type.
            </remarks>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.VertexDeclarationCache`1">
            <summary>
            Helper class which ensures we only lookup a vertex
            declaration for a particular type once.
            </summary>
            <typeparam name="T">A vertex structure which implements IVertexType.</typeparam>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.VertexElementFormat">
            <summary>
            Defines vertex element formats.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.Single">
            <summary>
            Single 32-bit floating point number.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.Vector2">
            <summary>
            Two component 32-bit floating point number.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.Vector3">
            <summary>
            Three component 32-bit floating point number.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.Vector4">
            <summary>
            Four component 32-bit floating point number.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.Color">
            <summary>
            Four component, packed unsigned byte, mapped to 0 to 1 range.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.Byte4">
            <summary>
            Four component unsigned byte.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.Short2">
            <summary>
            Two component signed 16-bit integer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.Short4">
            <summary>
            Four component signed 16-bit integer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.NormalizedShort2">
            <summary>
            Normalized, two component signed 16-bit integer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.NormalizedShort4">
            <summary>
            Normalized, four component signed 16-bit integer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.HalfVector2">
            <summary>
            Two component 16-bit floating point number.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementFormat.HalfVector4">
            <summary>
            Four component 16-bit floating point number.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.VertexElementUsage">
            <summary>
            Defines usage for vertex elements.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Position">
            <summary>
            Position data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Color">
            <summary>
            Color data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.TextureCoordinate">
            <summary>
            Texture coordinate data or can be used for user-defined data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Normal">
            <summary>
            Normal data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Binormal">
            <summary>
            Binormal data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Tangent">
            <summary>
            Tangent data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.BlendIndices">
            <summary>
            Blending indices data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.BlendWeight">
            <summary>
            Blending weight data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Depth">
            <summary>
            Depth data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Fog">
            <summary>
            Fog data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.PointSize">
            <summary>
            Point size data. Usable for drawing point sprites.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.Sample">
            <summary>
            Sampler data for specifies the displacement value to look up.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.VertexElementUsage.TessellateFactor">
            <summary>
            Single, positive float value, specifies a tessellation factor used in the tessellation unit to control the rate of tessellation.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.Viewport">
            <summary>
            Describes the view bounds for render-target surface.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Viewport.Height">
            <summary>
            The height of the bounds in pixels.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Viewport.MaxDepth">
            <summary>
            The upper limit of depth of this viewport.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Viewport.MinDepth">
            <summary>
            The lower limit of depth of this viewport.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Viewport.Width">
            <summary>
            The width of the bounds in pixels.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Viewport.Y">
            <summary>
            The y coordinate of the beginning of this viewport.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Viewport.X">
            <summary>
            The x coordinate of the beginning of this viewport.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Viewport.AspectRatio">
            <summary>
            Gets the aspect ratio of this <see cref="T:Microsoft.Xna.Framework.Graphics.Viewport"/>, which is width / height.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Viewport.Bounds">
            <summary>
            Gets or sets a boundary of this <see cref="T:Microsoft.Xna.Framework.Graphics.Viewport"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Viewport.TitleSafeArea">
            <summary>
            Returns the subset of the viewport that is guaranteed to be visible on a lower quality display.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Viewport.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a viewport from the given values. The <see cref="P:Microsoft.Xna.Framework.Graphics.Viewport.MinDepth"/> will be 0.0 and <see cref="P:Microsoft.Xna.Framework.Graphics.Viewport.MaxDepth"/> will be 1.0.
            </summary>
            <param name="x">The x coordinate of the upper-left corner of the view bounds in pixels.</param>
            <param name="y">The y coordinate of the upper-left corner of the view bounds in pixels.</param>
            <param name="width">The width of the view bounds in pixels.</param>
            <param name="height">The height of the view bounds in pixels.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Viewport.#ctor(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Constructs a viewport from the given values.
            </summary>
            <param name="bounds">A <see cref="T:Microsoft.Xna.Framework.Rectangle"/> that defines the location and size of the <see cref="T:Microsoft.Xna.Framework.Graphics.Viewport"/> in a render target.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Viewport.Project(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Projects a <see cref="T:Microsoft.Xna.Framework.Vector3"/> from world space into screen space.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Xna.Framework.Vector3"/> to project.</param>
            <param name="projection">The projection <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="view">The view <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="world">The world <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Viewport.Unproject(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Unprojects a <see cref="T:Microsoft.Xna.Framework.Vector3"/> from screen space into world space.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Xna.Framework.Vector3"/> to unproject.</param>
            <param name="projection">The projection <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="view">The view <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="world">The world <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Viewport.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Graphics.Viewport"/> in the format:
            {X:[<see cref="P:Microsoft.Xna.Framework.Graphics.Viewport.X"/>] Y:[<see cref="P:Microsoft.Xna.Framework.Graphics.Viewport.Y"/>] Width:[<see cref="P:Microsoft.Xna.Framework.Graphics.Viewport.Width"/>] Height:[<see cref="P:Microsoft.Xna.Framework.Graphics.Viewport.Height"/>] MinDepth:[<see cref="P:Microsoft.Xna.Framework.Graphics.Viewport.MinDepth"/>] MaxDepth:[<see cref="P:Microsoft.Xna.Framework.Graphics.Viewport.MaxDepth"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Graphics.Viewport"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameComponent.Dispose">
            <summary>
            Shuts down the component.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)">
            <summary>
            Shuts down the component.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.GameComponentCollection.ComponentAdded">
            <summary>
            Event that is triggered when a <see cref="T:Microsoft.Xna.Framework.GameComponent"/> is added
            to this <see cref="T:Microsoft.Xna.Framework.GameComponentCollection"/>.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.GameComponentCollection.ComponentRemoved">
            <summary>
            Event that is triggered when a <see cref="T:Microsoft.Xna.Framework.GameComponent"/> is removed
            from this <see cref="T:Microsoft.Xna.Framework.GameComponentCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameComponentCollection.ClearItems">
            <summary>
            Removes every <see cref="T:Microsoft.Xna.Framework.GameComponent"/> from this <see cref="T:Microsoft.Xna.Framework.GameComponentCollection"/>.
            Triggers <see cref="M:Microsoft.Xna.Framework.GameComponentCollection.OnComponentRemoved(Microsoft.Xna.Framework.GameComponentCollectionEventArgs)"/> once for each <see cref="T:Microsoft.Xna.Framework.GameComponent"/> removed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameWindow.IsBorderlessEXT">
            <summary>
            Determines whether the border of the window is visible.
            </summary>
            <exception cref="T:System.NotImplementedException">
            Thrown when trying to use this property on an unsupported platform.
            </exception>
        </member>
        <member name="T:Microsoft.Xna.Framework.GraphicsDeviceInformation">
            <summary>
            The settings used in creation of the graphics device.
            See <see cref="E:Microsoft.Xna.Framework.GraphicsDeviceManager.PreparingDeviceSettings"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GraphicsDeviceInformation.Adapter">
            <summary>
            The graphics adapter on which the graphics device will be created.
            </summary>
            <remarks>
            This is only valid on desktop systems where multiple graphics
            adapters are possible. Defaults to <see cref="P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DefaultAdapter"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.GraphicsDeviceInformation.GraphicsProfile">
            <summary>
            The requested graphics device feature set.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GraphicsDeviceInformation.PresentationParameters">
            <summary>
            The settings that define how graphics will be presented to the display.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Buttons">
            <summary>
            Defines the buttons on gamepad.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.DPadUp">
            <summary>
            Directional pad up.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.DPadDown">
            <summary>
            Directional pad down.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.DPadLeft">
            <summary>
            Directional pad left.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.DPadRight">
            <summary>
            Directional pad right.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.Start">
            <summary>
            START button.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.Back">
            <summary>
            BACK button.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.LeftStick">
            <summary>
            Left stick button (pressing the left stick).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.RightStick">
            <summary>
            Right stick button (pressing the right stick).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.LeftShoulder">
            <summary>
            Left bumper (shoulder) button.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.RightShoulder">
            <summary>
            Right bumper (shoulder) button.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.BigButton">
            <summary>
            Big button.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.A">
            <summary>
            A button.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.B">
            <summary>
            B button.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.X">
            <summary>
            X button.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.Y">
            <summary>
            Y button.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.LeftThumbstickLeft">
            <summary>
            Left stick is towards the left.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.RightTrigger">
            <summary>
            Right trigger.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.LeftTrigger">
            <summary>
            Left trigger.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.RightThumbstickUp">
            <summary>
            Right stick is towards up.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.RightThumbstickDown">
            <summary>
            Right stick is towards down.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.RightThumbstickRight">
            <summary>
            Right stick is towards the right.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.RightThumbstickLeft">
            <summary>
            Right stick is towards the left.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.LeftThumbstickUp">
            <summary>
            Left stick is towards up.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.LeftThumbstickDown">
            <summary>
            Left stick is towards down.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Buttons.LeftThumbstickRight">
            <summary>
            Left stick is towards the right.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.ButtonState">
            <summary>
            Defines a button state for buttons of mouse, gamepad or joystick.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.ButtonState.Released">
            <summary>
            The button is released.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.ButtonState.Pressed">
            <summary>
            The button is pressed.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadButtons.op_Equality(Microsoft.Xna.Framework.Input.GamePadButtons,Microsoft.Xna.Framework.Input.GamePadButtons)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadButtons"/> are
            equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
            True if <paramref name="left"/> and <paramref name="right"/> are equal;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadButtons.op_Inequality(Microsoft.Xna.Framework.Input.GamePadButtons,Microsoft.Xna.Framework.Input.GamePadButtons)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadButtons"/> are
            not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
            True if <paramref name="left"/> and <paramref name="right"/> are not equal;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadButtons.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>
            True if <paramref name="obj"/> is a <see cref="T:Microsoft.Xna.Framework.Input.GamePadButtons"/> and
            has the same value as this instance; otherwise, false.
            </returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePadDeadZone">
            <summary>
            Specifies a type of dead zone processing to apply to the controllers analog sticks when
            calling GetState.
            </summary>
            <param name="Circular">
            The combined X and Y position of each stick is compared to the dead zone. This provides
            better control than IndependentAxes when the stick is used as a two-dimensional control
            surface, such as when controlling a character's view in a first-person game.
            </param>
            <param name="IndependentAxes">
            The X and Y positions of each stick are compared against the dead zone independently.
            This setting is the default when calling GetState.
            </param>
            <param name="None">
            The values of each stick are not processed and are returned by GetState as "raw" values.
            This is best if you intend to implement your own dead zone processing.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.op_Equality(Microsoft.Xna.Framework.Input.GamePadDPad,Microsoft.Xna.Framework.Input.GamePadDPad)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadDPad"/> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
            True if <paramref name="left"/> and <paramref name="right"/> are equal;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.op_Inequality(Microsoft.Xna.Framework.Input.GamePadDPad,Microsoft.Xna.Framework.Input.GamePadDPad)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadDPad"/> are not
            equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
            True if <paramref name="left"/> and <paramref name="right"/> are not equal;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>
            True if <paramref name="obj"/> is a <see cref="T:Microsoft.Xna.Framework.Input.GamePadDPad"/> and has the same
            value as this instance; otherwise, false.
            </returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePadState">
            <summary>
            Represents specific information about the state of a controller,
            including the current state of buttons and sticks.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.IsConnected">
            <summary>
            Indicates whether the controller is connected.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.PacketNumber">
            <summary>
            Gets the packet number associated with this state.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.Buttons">
            <summary>
            Returns a structure that identifies which buttons on the controller
            are pressed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.DPad">
            <summary>
            Returns a structure that identifies which directions of the directional pad
            on the controller are pressed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.ThumbSticks">
            <summary>
            Returns a structure that indicates the position of the controller thumbsticks.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.GamePadState.Triggers">
            <summary>
            Returns a structure that identifies the position of triggers on the controller.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.#ctor(Microsoft.Xna.Framework.Input.GamePadThumbSticks,Microsoft.Xna.Framework.Input.GamePadTriggers,Microsoft.Xna.Framework.Input.GamePadButtons,Microsoft.Xna.Framework.Input.GamePadDPad)">
            <summary>
            Initializes a new instance of the GamePadState class using the specified
            GamePadThumbSticks, GamePadTriggers, GamePadButtons, and GamePadDPad.
            </summary>
            <param name="thumbSticks">Initial thumbstick state.</param>
            <param name="triggers">Initial trigger state.</param>
            <param name="buttons">Initial button state.</param>
            <param name="dPad">Initial directional pad state.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,Microsoft.Xna.Framework.Input.Buttons[])">
            <summary>
            Initializes a new instance of the GamePadState class with the specified stick,
            trigger, and button values.
            </summary>
            <param name="leftThumbStick">
            Left stick value. Each axis is clamped between 1.0 and 1.0.
            </param>
            <param name="rightThumbStick">
            Right stick value. Each axis is clamped between 1.0 and 1.0.
            </param>
            <param name="leftTrigger">
            Left trigger value. This value is clamped between 0.0 and 1.0.
            </param>
            <param name="rightTrigger">
            Right trigger value. This value is clamped between 0.0 and 1.0.
            </param>
            <param name="buttons">
            Array or parameter list of Buttons to initialize as pressed.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.IsButtonDown(Microsoft.Xna.Framework.Input.Buttons)">
            <summary>
            Determines whether specified input device buttons are pressed in this GamePadState.
            </summary>
            <param name="button">
            Buttons to query. Specify a single button, or combine multiple buttons using
            a bitwise OR operation.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.IsButtonUp(Microsoft.Xna.Framework.Input.Buttons)">
            <summary>
            Determines whether specified input device buttons are up (not pressed) in this
            GamePadState.
            </summary>
            <param name="button">
            Buttons to query. Specify a single button, or combine multiple buttons using
            a bitwise OR operation.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.op_Equality(Microsoft.Xna.Framework.Input.GamePadState,Microsoft.Xna.Framework.Input.GamePadState)">
            <summary>
            Determines whether two GamePadState instances are equal.
            </summary>
            <param name="left">Object on the left of the equal sign.</param>
            <param name="right">Object on the right of the equal sign.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.op_Inequality(Microsoft.Xna.Framework.Input.GamePadState,Microsoft.Xna.Framework.Input.GamePadState)">
            <summary>
            Determines whether two GamePadState instances are not equal.
            </summary>
            <param name="left">Object on the left of the equal sign.</param>
            <param name="right">Object on the right of the equal sign.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a
            specified object.
            </summary>
            <param name="obj">Object with which to make the comparison.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.ToString">
            <summary>
            Retrieves a string representation of this object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.op_Equality(Microsoft.Xna.Framework.Input.GamePadThumbSticks,Microsoft.Xna.Framework.Input.GamePadThumbSticks)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadThumbSticks"/>
            are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
            True if <paramref name="left"/> and <paramref name="right"/> are equal;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.op_Inequality(Microsoft.Xna.Framework.Input.GamePadThumbSticks,Microsoft.Xna.Framework.Input.GamePadThumbSticks)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadThumbSticks"/>
            are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
            True if <paramref name="left"/> and <paramref name="right"/> are not equal;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>
            True if <paramref name="obj"/> is a <see cref="T:Microsoft.Xna.Framework.Input.GamePadThumbSticks"/> and has the
            same value as this instance; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.op_Equality(Microsoft.Xna.Framework.Input.GamePadTriggers,Microsoft.Xna.Framework.Input.GamePadTriggers)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadTriggers"/> are
            equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
            True if <paramref name="left"/> and <paramref name="right"/> are equal;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.op_Inequality(Microsoft.Xna.Framework.Input.GamePadTriggers,Microsoft.Xna.Framework.Input.GamePadTriggers)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadTriggers"/> are
            not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
            True if <paramref name="left"/> and <paramref name="right"/> are not equal;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>
            True if <paramref name="obj"/> is a <see cref="T:Microsoft.Xna.Framework.Input.GamePadTriggers"/> and has the
            same value as this instance; otherwise, false.
            </returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePadType">
            <summary>
            Defines a type of gamepad.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadType.GamePad">
            <summary>
            GamePad is the XBOX controller.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadType.Wheel">
            <summary>
            GamePad is a wheel.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadType.ArcadeStick">
            <summary>
            GamePad is an arcade stick.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadType.FlightStick">
            <summary>
            GamePad is a flight stick.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadType.DancePad">
            <summary>
            GamePad is a dance pad.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadType.Guitar">
            <summary>
            GamePad is a guitar.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadType.AlternateGuitar">
            <summary>
            GamePad is an alternate guitar.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadType.DrumKit">
            <summary>
            GamePad is a drum kit.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadType.BigButtonPad">
            <summary>
            GamePad is a big button pad.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Keyboard">
            <summary>
            Allows getting keystrokes from keyboard.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Keyboard.GetState">
            <summary>
            Returns the current keyboard state.
            </summary>
            <returns>Current keyboard state.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Keyboard.GetState(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Returns the current keyboard state for a given player.
            </summary>
            <param name="playerIndex">Player index of the keyboard.</param>
            <returns>Current keyboard state.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.KeyboardState">
            <summary>
            Holds the state of keystrokes by a keyboard.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.KeyboardState.Item(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Returns the state of a specified key.
            </summary>
            <param name="key">The key to query.</param>
            <returns>The state of the key.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.#ctor(Microsoft.Xna.Framework.Input.Keys[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> class.
            </summary>
            <param name="keys">List of keys to be flagged as pressed on initialization.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.#ctor(System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> class.
            </summary>
            <param name="keys">List of keys to be flagged as pressed on initialization.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.IsKeyDown(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Gets whether given key is currently being pressed.
            </summary>
            <param name="key">The key to query.</param>
            <returns>true if the key is pressed; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.IsKeyUp(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Gets whether given key is currently being not pressed.
            </summary>
            <param name="key">The key to query.</param>
            <returns>true if the key is not pressed; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.GetPressedKeys">
            <summary>
            Returns an array of values holding keys that are currently being pressed.
            </summary>
            <returns>The keys that are currently being pressed.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.GetHashCode">
            <summary>
            Gets the hash code for <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.op_Equality(Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance to the left of the equality operator.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance to the right of the equality operator.</param>
            <returns>true if the instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.op_Inequality(Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance to the left of the inequality operator.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance to the right of the inequality operator.</param>
            <returns>true if the instances are different; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified object.
            </summary>
            <param name="obj">The <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> to compare.</param>
            <returns>true if the provided <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance is same with current; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Keys">
            <summary>
            Defines the keys on a keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.None">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Back">
            <summary>
            BACKSPACE key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Tab">
            <summary>
            TAB key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Enter">
            <summary>
            ENTER key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.CapsLock">
            <summary>
            CAPS LOCK key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Escape">
            <summary>
            ESC key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Space">
            <summary>
            SPACEBAR key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.PageUp">
            <summary>
            PAGE UP key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.PageDown">
            <summary>
            PAGE DOWN key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.End">
            <summary>
            END key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Home">
            <summary>
            HOME key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Left">
            <summary>
            LEFT ARROW key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Up">
            <summary>
            UP ARROW key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Right">
            <summary>
            RIGHT ARROW key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Down">
            <summary>
            DOWN ARROW key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Select">
            <summary>
            SELECT key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Print">
            <summary>
            PRINT key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Execute">
            <summary>
            EXECUTE key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.PrintScreen">
            <summary>
            PRINT SCREEN key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Insert">
            <summary>
            INS key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Delete">
            <summary>
            DEL key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Help">
            <summary>
            HELP key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D0">
            <summary>
            Digit zero key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D1">
            <summary>
            Digit one key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D2">
            <summary>
            Digit two key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D3">
            <summary>
            Digit three key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D4">
            <summary>
            Digit four key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D5">
            <summary>
            Digit five key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D6">
            <summary>
            Digit six key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D7">
            <summary>
            Digit seven key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D8">
            <summary>
            Digit eight key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D9">
            <summary>
            Digit nine key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.A">
            <summary>
            A key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.B">
            <summary>
            B key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.C">
            <summary>
            C key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D">
            <summary>
            D key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.E">
            <summary>
            E key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F">
            <summary>
            F key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.G">
            <summary>
            G key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.H">
            <summary>
            H key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.I">
            <summary>
            I key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.J">
            <summary>
            J key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.K">
            <summary>
            K key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.L">
            <summary>
            L key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.M">
            <summary>
            M key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.N">
            <summary>
            N key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.O">
            <summary>
            O key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.P">
            <summary>
            P key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Q">
            <summary>
            Q key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.R">
            <summary>
            R key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.S">
            <summary>
            S key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.T">
            <summary>
            T key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.U">
            <summary>
            U key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.V">
            <summary>
            V key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.W">
            <summary>
            W key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.X">
            <summary>
            X key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Y">
            <summary>
            Y key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Z">
            <summary>
            Z key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LeftWindows">
            <summary>
            Left Windows key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.RightWindows">
            <summary>
            Right Windows key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Apps">
            <summary>
            Applications key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Sleep">
            <summary>
            Computer Sleep key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad0">
            <summary>
            Numeric keypad 0 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad1">
            <summary>
            Numeric keypad 1 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad2">
            <summary>
            Numeric keypad 2 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad3">
            <summary>
            Numeric keypad 3 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad4">
            <summary>
            Numeric keypad 4 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad5">
            <summary>
            Numeric keypad 5 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad6">
            <summary>
            Numeric keypad 6 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad7">
            <summary>
            Numeric keypad 7 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad8">
            <summary>
            Numeric keypad 8 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad9">
            <summary>
            Numeric keypad 9 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Multiply">
            <summary>
            Multiply key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Add">
            <summary>
            Add key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Separator">
            <summary>
            Separator key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Subtract">
            <summary>
            Subtract key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Decimal">
            <summary>
            Decimal key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Divide">
            <summary>
            Divide key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F1">
            <summary>
            F1 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F2">
            <summary>
            F2 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F3">
            <summary>
            F3 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F4">
            <summary>
            F4 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F5">
            <summary>
            F5 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F6">
            <summary>
            F6 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F7">
            <summary>
            F7 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F8">
            <summary>
            F8 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F9">
            <summary>
            F9 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F10">
            <summary>
            F10 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F11">
            <summary>
            F11 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F12">
            <summary>
            F12 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F13">
            <summary>
            F13 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F14">
            <summary>
            F14 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F15">
            <summary>
            F15 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F16">
            <summary>
            F16 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F17">
            <summary>
            F17 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F18">
            <summary>
            F18 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F19">
            <summary>
            F19 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F20">
            <summary>
            F20 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F21">
            <summary>
            F21 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F22">
            <summary>
            F22 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F23">
            <summary>
            F23 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F24">
            <summary>
            F24 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumLock">
            <summary>
            NUM LOCK key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Scroll">
            <summary>
            SCROLL LOCK key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LeftShift">
            <summary>
            Left SHIFT key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.RightShift">
            <summary>
            Right SHIFT key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LeftControl">
            <summary>
            Left CONTROL key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.RightControl">
            <summary>
            Right CONTROL key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LeftAlt">
            <summary>
            Left ALT key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.RightAlt">
            <summary>
            Right ALT key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserBack">
            <summary>
            Browser Back key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserForward">
            <summary>
            Browser Forward key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserRefresh">
            <summary>
            Browser Refresh key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserStop">
            <summary>
            Browser Stop key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserSearch">
            <summary>
            Browser Search key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserFavorites">
            <summary>
            Browser Favorites key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserHome">
            <summary>
            Browser Start and Home key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.VolumeMute">
            <summary>
            Volume Mute key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.VolumeDown">
            <summary>
            Volume Down key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.VolumeUp">
            <summary>
            Volume Up key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.MediaNextTrack">
            <summary>
            Next Track key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.MediaPreviousTrack">
            <summary>
            Previous Track key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.MediaStop">
            <summary>
            Stop Media key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.MediaPlayPause">
            <summary>
            Play/Pause Media key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LaunchMail">
            <summary>
            Start Mail key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.SelectMedia">
            <summary>
            Select Media key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LaunchApplication1">
            <summary>
            Start Application 1 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LaunchApplication2">
            <summary>
            Start Application 2 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemSemicolon">
            <summary>
            The OEM Semicolon key on a US standard keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemPlus">
            <summary>
            For any country/region, the '+' key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemComma">
            <summary>
            For any country/region, the ',' key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemMinus">
            <summary>
            For any country/region, the '-' key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemPeriod">
            <summary>
            For any country/region, the '.' key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemQuestion">
            <summary>
            The OEM question mark key on a US standard keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemTilde">
            <summary>
            The OEM tilde key on a US standard keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemOpenBrackets">
            <summary>
            The OEM open bracket key on a US standard keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemPipe">
            <summary>
            The OEM pipe key on a US standard keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemCloseBrackets">
            <summary>
            The OEM close bracket key on a US standard keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemQuotes">
            <summary>
            The OEM singled/double quote key on a US standard keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Oem8">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemBackslash">
            <summary>
            The OEM angle bracket or backslash key on the RT 102 key keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.ProcessKey">
            <summary>
            IME PROCESS key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Attn">
            <summary>
            Attn key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Crsel">
            <summary>
            CrSel key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Exsel">
            <summary>
            ExSel key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.EraseEof">
            <summary>
            Erase EOF key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Play">
            <summary>
            Play key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Zoom">
            <summary>
            Zoom key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Pa1">
            <summary>
            PA1 key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemClear">
            <summary>
            CLEAR key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.ChatPadGreen">
            <summary>
            Green ChatPad key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.ChatPadOrange">
            <summary>
            Orange ChatPad key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Pause">
            <summary>
            PAUSE key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.ImeConvert">
            <summary>
            IME Convert key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.ImeNoConvert">
            <summary>
            IME NoConvert key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Kana">
            <summary>
            Kana key on Japanese keyboards.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Kanji">
            <summary>
            Kanji key on Japanese keyboards.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemAuto">
            <summary>
            OEM Auto key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemCopy">
            <summary>
            OEM Copy key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemEnlW">
            <summary>
            OEM Enlarge Window key.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.KeyState">
            <summary>
            Identifies the state of a keyboard key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.KeyState.Up">
            <summary>
            Key is released.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.KeyState.Down">
            <summary>
            Key is pressed.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Mouse">
            <summary>
            Allows reading position and button click information from mouse.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Mouse.GetState">
            <summary>
            Gets mouse state information that includes position and button
            presses for the provided window
            </summary>
            <returns>Current state of the mouse.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Mouse.SetPosition(System.Int32,System.Int32)">
            <summary>
            Sets mouse cursor's relative position to game-window.
            </summary>
            <param name="x">Relative horizontal position of the cursor.</param>
            <param name="y">Relative vertical position of the cursor.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.MouseState">
            <summary>
            Represents a mouse state with cursor position and button press information.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.X">
            <summary>
            Gets horizontal position of the cursor.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.Y">
            <summary>
            Gets vertical position of the cursor.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.LeftButton">
            <summary>
            Gets state of the left mouse button.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.RightButton">
            <summary>
            Gets state of the right mouse button.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.MiddleButton">
            <summary>
            Gets state of the middle mouse button.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.XButton1">
            <summary>
            Gets state of the XButton1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.XButton2">
            <summary>
            Gets state of the XButton2.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.ScrollWheelValue">
            <summary>
            Returns cumulative scroll wheel value since the game start.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.#ctor(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState)">
            <summary>
            Initializes a new instance of the MouseState.
            </summary>
            <param name="x">Horizontal position of the mouse.</param>
            <param name="y">Vertical position of the mouse.</param>
            <param name="scrollWheel">Mouse scroll wheel's value.</param>
            <param name="leftButton">Left mouse button's state.</param>
            <param name="middleButton">Middle mouse button's state.</param>
            <param name="rightButton">Right mouse button's state.</param>
            <param name="xButton1">XBUTTON1's state.</param>
            <param name="xButton2">XBUTTON2's state.</param>
            <remarks>
            Normally <see cref="M:Microsoft.Xna.Framework.Input.Mouse.GetState"/> should be used to get mouse current
            state. The constructor is provided for simulating mouse input.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.op_Equality(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.MouseState)">
            <summary>
            Compares whether two MouseState instances are equal.
            </summary>
            <param name="left">MouseState instance on the left of the equal sign.</param>
            <param name="right">MouseState instance on the right of the equal sign.</param>
            <returns>true if the instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.op_Inequality(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.MouseState)">
            <summary>
            Compares whether two MouseState instances are not equal.
            </summary>
            <param name="left">MouseState instance on the left of the equal sign.</param>
            <param name="right">MouseState instance on the right of the equal sign.</param>
            <returns>true if the objects are not equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified object.
            </summary>
            <param name="obj">The MouseState to compare.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.GetHashCode">
            <summary>
            Gets the hash code for MouseState instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.ToString">
            <summary>
            Returns a string describing the mouse state.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.Input.TextInputEXT.TextInput">
            <summary>
            Use this event to retrieve text for objects like textboxes.
            This event is not raised by noncharacter keys.
            This event also supports key repeat.
            For more information this event is based off:
            http://msdn.microsoft.com/en-AU/library/system.windows.forms.control.keypress.aspx
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.TextInputEXT.SetInputRectangle(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Sets the location within the game window where the text input is located.
            This is used to set the location of the IME suggestions
            </summary>
            <param name="rectangle">Text input location relative to GameWindow.ClientBounds</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.NamespaceDoc">
            <summary>
            Provides functionality to handle input from keyboards, mice, gamepads, etc.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.MathHelper">
            <summary>
            Contains commonly used precalculated values and mathematical operations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.E">
            <summary>
            Represents the mathematical constant e(2.71828175).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Log10E">
            <summary>
            Represents the log base ten of e(0.4342945).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Log2E">
            <summary>
            Represents the log base two of e(1.442695).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Pi">
            <summary>
            Represents the value of pi(3.14159274).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.PiOver2">
            <summary>
            Represents the value of pi divided by two(1.57079637).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.PiOver4">
            <summary>
            Represents the value of pi divided by four(0.7853982).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.TwoPi">
            <summary>
            Represents the value of pi times two(6.28318548).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns the Cartesian coordinate for one axis of a point that is defined by a
            given triangle and two normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">
            The coordinate on one axis of vertex 1 of the defining triangle.
            </param>
            <param name="value2">
            The coordinate on the same axis of vertex 2 of the defining triangle.
            </param>
            <param name="value3">
            The coordinate on the same axis of vertex 3 of the defining triangle.
            </param>
            <param name="amount1">
            The normalized barycentric (areal) coordinate b2, equal to the weighting factor
            for vertex 2, the coordinate of which is specified in value2.
            </param>
            <param name="amount2">
            The normalized barycentric (areal) coordinate b3, equal to the weighting factor
            for vertex 3, the coordinate of which is specified in value3.
            </param>
            <returns>
            Cartesian coordinate of the specified point with respect to the axis being used.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A position that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">
            The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c>
            will be returned.
            </param>
            <param name="max">
            The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c>
            will be returned.
            </param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Distance(System.Single,System.Single)">
            <summary>
            Calculates the absolute value of the difference of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>Distance between the two values.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position.</param>
            <param name="tangent1">Source tangent.</param>
            <param name="value2">Source position.</param>
            <param name="tangent2">Source tangent.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Lerp(System.Single,System.Single,System.Single)">
            <summary>
            Linearly interpolates between two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">
            Value between 0 and 1 indicating the weight of value2.
            </param>
            <returns>Interpolated value.</returns>
            <remarks>
            This method performs the linear interpolation based on the following formula.
            <c>value1 + (value2 - value1) * amount</c>
            Passing amount a value of 0 will cause value1 to be returned, a value of 1 will
            cause value2 to be returned.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Max(System.Single,System.Single)">
            <summary>
            Returns the greater of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Min(System.Single,System.Single)">
            <summary>
            Returns the lesser of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
            <returns>Interpolated value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.ToDegrees(System.Single)">
            <summary>
            Converts radians to degrees.
            </summary>
            <param name="radians">The angle in radians.</param>
            <returns>The angle in degrees.</returns>
            <remarks>
            This method uses double precision internally, though it returns single float.
            Factor = 180 / pi
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.ToRadians(System.Single)">
            <summary>
            Converts degrees to radians.
            </summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The angle in radians.</returns>
            <remarks>
            This method uses double precision internally, though it returns single float.
            Factor = pi / 180
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.WrapAngle(System.Single)">
            <summary>
            Reduces a given angle to a value between pi and -pi.
            </summary>
            <param name="angle">The angle to reduce, in radians.</param>
            <returns>The new angle, in radians.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">
            The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c>
            will be returned.
            </param>
            <param name="max">
            The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c>
            will be returned.
            </param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.GetMachineEpsilonFloat">
            <summary>
            Find the current machine's Epsilon for the float data type.
            (That is, the largest float, e,  where e == 0.0f is true.)
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Matrix">
            <summary>
            Represents the right-handed 4x4 floating point matrix, which can store translation, scale and rotation information.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Backward">
            <summary>
            The backward vector formed from the third row M31, M32, M33 elements.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Down">
            <summary>
            The down vector formed from the second row -M21, -M22, -M23 elements.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Forward">
            <summary>
            The forward vector formed from the third row -M31, -M32, -M33 elements.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Identity">
            <summary>
            Returns the identity matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Left">
            <summary>
            The left vector formed from the first row -M11, -M12, -M13 elements.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Right">
            <summary>
            The right vector formed from the first row M11, M12, M13 elements.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Translation">
            <summary>
            Position stored in this matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Matrix.Up">
            <summary>
            The upper vector formed from the second row M21, M22, M23 elements.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M11">
            <summary>
            A first row and first column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M12">
            <summary>
            A first row and second column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M13">
            <summary>
            A first row and third column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M14">
            <summary>
            A first row and fourth column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M21">
            <summary>
            A second row and first column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M22">
            <summary>
            A second row and second column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M23">
            <summary>
            A second row and third column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M24">
            <summary>
            A second row and fourth column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M31">
            <summary>
            A third row and first column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M32">
            <summary>
            A third row and second column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M33">
            <summary>
            A third row and third column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M34">
            <summary>
            A third row and fourth column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M41">
            <summary>
            A fourth row and first column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M42">
            <summary>
            A fourth row and second column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M43">
            <summary>
            A fourth row and third column value.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Matrix.M44">
            <summary>
            A fourth row and fourth column value.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a matrix.
            </summary>
            <param name="m11">A first row and first column value.</param>
            <param name="m12">A first row and second column value.</param>
            <param name="m13">A first row and third column value.</param>
            <param name="m14">A first row and fourth column value.</param>
            <param name="m21">A second row and first column value.</param>
            <param name="m22">A second row and second column value.</param>
            <param name="m23">A second row and third column value.</param>
            <param name="m24">A second row and fourth column value.</param>
            <param name="m31">A third row and first column value.</param>
            <param name="m32">A third row and second column value.</param>
            <param name="m33">A third row and third column value.</param>
            <param name="m34">A third row and fourth column value.</param>
            <param name="m41">A fourth row and first column value.</param>
            <param name="m42">A fourth row and second column value.</param>
            <param name="m43">A fourth row and third column value.</param>
            <param name="m44">A fourth row and fourth column value.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Decompose(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Decomposes this matrix to translation, rotation and scale elements. Returns <c>true</c> if matrix can be decomposed; <c>false</c> otherwise.
            </summary>
            <param name="scale">Scale vector as an output parameter.</param>
            <param name="rotation">Rotation quaternion as an output parameter.</param>
            <param name="translation">Translation vector as an output parameter.</param>
            <returns><c>true</c> if matrix can be decomposed; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Determinant">
            <summary>
            Returns a determinant of this <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <returns>Determinant of this <see cref="T:Microsoft.Xna.Framework.Matrix"/></returns>
            <remarks>See more about determinant here - http://en.wikipedia.org/wiki/Determinant.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Equals(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> without any tolerance.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Matrix"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/> without any tolerance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Matrix"/> in the format:
            {M11:[<see cref="F:Microsoft.Xna.Framework.Matrix.M11"/>] M12:[<see cref="F:Microsoft.Xna.Framework.Matrix.M12"/>] M13:[<see cref="F:Microsoft.Xna.Framework.Matrix.M13"/>] M14:[<see cref="F:Microsoft.Xna.Framework.Matrix.M14"/>]}
            {M21:[<see cref="F:Microsoft.Xna.Framework.Matrix.M21"/>] M12:[<see cref="F:Microsoft.Xna.Framework.Matrix.M22"/>] M13:[<see cref="F:Microsoft.Xna.Framework.Matrix.M23"/>] M14:[<see cref="F:Microsoft.Xna.Framework.Matrix.M24"/>]}
            {M31:[<see cref="F:Microsoft.Xna.Framework.Matrix.M31"/>] M32:[<see cref="F:Microsoft.Xna.Framework.Matrix.M32"/>] M33:[<see cref="F:Microsoft.Xna.Framework.Matrix.M33"/>] M34:[<see cref="F:Microsoft.Xna.Framework.Matrix.M34"/>]}
            {M41:[<see cref="F:Microsoft.Xna.Framework.Matrix.M41"/>] M42:[<see cref="F:Microsoft.Xna.Framework.Matrix.M42"/>] M43:[<see cref="F:Microsoft.Xna.Framework.Matrix.M43"/>] M44:[<see cref="F:Microsoft.Xna.Framework.Matrix.M44"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains sum of two matrixes.
            </summary>
            <param name="matrix1">The first matrix to add.</param>
            <param name="matrix2">The second matrix to add.</param>
            <returns>The result of the matrix addition.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains sum of two matrixes.
            </summary>
            <param name="matrix1">The first matrix to add.</param>
            <param name="matrix2">The second matrix to add.</param>
            <param name="result">The result of the matrix addition as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for spherical billboarding that rotates around specified object position.
            </summary>
            <param name="objectPosition">Position of billboard object. It will rotate around that vector.</param>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Matrix"/> for spherical billboarding.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for spherical billboarding that rotates around specified object position.
            </summary>
            <param name="objectPosition">Position of billboard object. It will rotate around that vector.</param>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Matrix"/> for spherical billboarding as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for cylindrical billboarding that rotates around specified axis.
            </summary>
            <param name="objectPosition">Object position the billboard will rotate around.</param>
            <param name="cameraPosition">Camera position.</param>
            <param name="rotateAxis">Axis of billboard for rotation.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="objectForwardVector">Optional object forward vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Matrix"/> for cylindrical billboarding.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for cylindrical billboarding that rotates around specified axis.
            </summary>
            <param name="objectPosition">Object position the billboard will rotate around.</param>
            <param name="cameraPosition">Camera position.</param>
            <param name="rotateAxis">Axis of billboard for rotation.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="objectForwardVector">Optional object forward vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Matrix"/> for cylindrical billboarding as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains the rotation moment around specified axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains the rotation moment around specified axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> from a <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> of rotation moment.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> from a <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> of rotation moment.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> from the specified yaw, pitch and roll values.
            </summary>
            <param name="yaw">The yaw rotation value in radians.</param>
            <param name="pitch">The pitch rotation value in radians.</param>
            <param name="roll">The roll rotation value in radians.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
            <remarks>For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> from the specified yaw, pitch and roll values.
            </summary>
            <param name="yaw">The yaw rotation value in radians.</param>
            <param name="pitch">The pitch rotation value in radians.</param>
            <param name="roll">The roll rotation value in radians.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
            <remarks>For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new viewing <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraTarget">Lookup vector of the camera.</param>
            <param name="cameraUpVector">The direction of the upper edge of the camera.</param>
            <returns>The viewing <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new viewing <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraTarget">Lookup vector of the camera.</param>
            <param name="cameraUpVector">The direction of the upper edge of the camera.</param>
            <param name="result">The viewing <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for orthographic view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for orthographic view.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for orthographic view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <param name="result">The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for orthographic view as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized orthographic view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized orthographic view.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized orthographic view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <param name="result">The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized orthographic view as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <param name="result">The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view with field of view.
            </summary>
            <param name="fieldOfView">Field of view in the y direction in radians.</param>
            <param name="aspectRatio">Width divided by height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view with FOV.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view with field of view.
            </summary>
            <param name="fieldOfView">Field of view in the y direction in radians.</param>
            <param name="aspectRatio">Width divided by height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance of the near plane.</param>
            <param name="farPlaneDistance">Distance of the far plane.</param>
            <param name="result">The new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for perspective view with FOV as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized perspective view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized perspective view.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized perspective view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <param name="result">The new <see cref="T:Microsoft.Xna.Framework.Matrix"/> for customized perspective view as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around X axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around X axis.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around X axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around X axis as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Y axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Y axis.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Y axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Y axis as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Z axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Z axis.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Z axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:Microsoft.Xna.Framework.Matrix"/> around Z axis as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="scale">Scale value for all three axises.</param>
            <returns>The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="scale">Scale value for all three axises.</param>
            <param name="result">The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="xScale">Scale value for X axis.</param>
            <param name="yScale">Scale value for Y axis.</param>
            <param name="zScale">Scale value for Z axis.</param>
            <returns>The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="xScale">Scale value for X axis.</param>
            <param name="yScale">Scale value for Y axis.</param>
            <param name="zScale">Scale value for Z axis.</param>
            <param name="result">The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="scales"><see cref="T:Microsoft.Xna.Framework.Vector3"/> representing x,y and z scale values.</param>
            <returns>The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="scales"><see cref="T:Microsoft.Xna.Framework.Vector3"/> representing x,y and z scale values.</param>
            <param name="result">The scaling <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Plane)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that flattens geometry into a specified <see cref="T:Microsoft.Xna.Framework.Plane"/> as if casting a shadow from a specified light source.
            </summary>
            <param name="lightDirection">A vector specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Matrix"/> that can be used to flatten geometry onto the specified plane from the specified direction. </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that flattens geometry into a specified <see cref="T:Microsoft.Xna.Framework.Plane"/> as if casting a shadow from a specified light source.
            </summary>
            <param name="lightDirection">A vector specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <param name="result">A <see cref="T:Microsoft.Xna.Framework.Matrix"/> that can be used to flatten geometry onto the specified plane from the specified direction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="xPosition">X coordinate of translation.</param>
            <param name="yPosition">Y coordinate of translation.</param>
            <param name="zPosition">Z coordinate of translation.</param>
            <returns>The translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">X,Y and Z coordinates of translation.</param>
            <param name="result">The translation <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">X,Y and Z coordinates of translation.</param>
            <returns>The translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new translation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="xPosition">X coordinate of translation.</param>
            <param name="yPosition">Y coordinate of translation.</param>
            <param name="zPosition">Z coordinate of translation.</param>
            <param name="result">The translation <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane)">
            <summary>
            Creates a new reflection <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">The plane that used for reflection calculation.</param>
            <returns>The reflection <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new reflection <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">The plane that used for reflection calculation.</param>
            <param name="result">The reflection <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new world <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">The position vector.</param>
            <param name="forward">The forward direction vector.</param>
            <param name="up">The upward direction vector. Usually <see cref="P:Microsoft.Xna.Framework.Vector3.Up"/>.</param>
            <returns>The world <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new world <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">The position vector.</param>
            <param name="forward">The forward direction vector.</param>
            <param name="up">The upward direction vector. Usually <see cref="P:Microsoft.Xna.Framework.Vector3.Up"/>.</param>
            <param name="result">The world <see cref="T:Microsoft.Xna.Framework.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by the elements of another matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">Divisor <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>The result of dividing the matrix.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by the elements of another matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">Divisor <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">The result of dividing the matrix as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a matrix by a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a matrix by a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Invert(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains inversion of the specified matrix.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>The inverted matrix.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Invert(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains inversion of the specified matrix.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">The inverted matrix as output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Lerp(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains linear interpolation of the values in specified matrixes.
            </summary>
            <param name="matrix1">The first <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>>The result of linear interpolation of the specified matrixes.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Lerp(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains linear interpolation of the values in specified matrixes.
            </summary>
            <param name="matrix1">The first <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified matrixes as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains a multiplication of two matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Result of the matrix multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains a multiplication of two matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Result of the matrix multiplication as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Matrix"/> and a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>Result of the matrix multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Matrix"/> and a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">Result of the matrix multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Returns a matrix with the all values negated.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Result of the matrix negation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Returns a matrix with the all values negated.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Result of the matrix negation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains subtraction of one matrix from another.
            </summary>
            <param name="matrix1">The first <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>The result of the matrix subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Matrix"/> that contains subtraction of one matrix from another.
            </summary>
            <param name="matrix1">The first <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">The result of the matrix subtraction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Transpose(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Swap the matrix rows and columns.
            </summary>
            <param name="matrix">The matrix for transposing operation.</param>
            <returns>The new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains the transposing result.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.Transpose(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Swap the matrix rows and columns.
            </summary>
            <param name="matrix">The matrix for transposing operation.</param>
            <param name="result">The new <see cref="T:Microsoft.Xna.Framework.Matrix"/> which contains the transposing result as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Addition(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Adds two matrixes.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the add sign.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the add sign.</param>
            <returns>Sum of the matrixes.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Division(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by the elements of another <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the div sign.</param>
            <param name="matrix2">Divisor <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the div sign.</param>
            <returns>The result of dividing the matrixes.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Division(Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Divides the elements of a <see cref="T:Microsoft.Xna.Framework.Matrix"/> by a scalar.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a matrix by a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Equality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Matrix"/> instances are equal without any tolerance.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the equal sign.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Inequality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Matrix"/> instances are not equal without any tolerance.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the not equal sign.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Multiplies two matrixes.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the mul sign.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the mul sign.</param>
            <returns>Result of the matrix multiplication.</returns>
            <remarks>
            Using matrix multiplication algorithm - see http://en.wikipedia.org/wiki/Matrix_multiplication.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix,System.Single)">
            <summary>
            Multiplies the elements of matrix by a scalar.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the matrix multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_Subtraction(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Subtracts the values of one <see cref="T:Microsoft.Xna.Framework.Matrix"/> from another <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix1">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the left of the sub sign.</param>
            <param name="matrix2">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the sub sign.</param>
            <returns>Result of the matrix subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.op_UnaryNegation(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Inverts values in the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix">Source <see cref="T:Microsoft.Xna.Framework.Matrix"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaPlayer.Play(Microsoft.Xna.Framework.Media.Song)">
            <summary>
            The Play method clears the current playback queue and queues the specified song
            for playback. Playback starts immediately at the beginning of the song.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Song.FromUri(System.String,System.Uri)">
            <summary>
            Constructs a new Song object based on the specified URI.
            </summary>
            <remarks>
            This method matches the signature of the one in XNA4, however we currently can't play remote songs, so
            the URI is required to be a file name and the code uses the LocalPath property only.
            </remarks>
            <param name="name">Name of the song.</param>
            <param name="uri">Uri object that represents the URI.</param>
            <returns>Song object that can be used to play the song.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Media.VideoSoundtrackType">
            <summary>
            Type of sounds in a video
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.VideoSoundtrackType.Music">
            <summary>
            This video contains only music.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.VideoSoundtrackType.Dialog">
            <summary>
            This video contains only dialog.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.VideoSoundtrackType.MusicAndDialog">
            <summary>
            This video contains music and dialog.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Transform(Microsoft.Xna.Framework.Plane,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Transforms a normalized plane by a matrix.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed plane.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Transform(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Plane@)">
            <summary>
            Transforms a normalized plane by a matrix.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <param name="result">The transformed plane.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Transform(Microsoft.Xna.Framework.Plane,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transforms a normalized plane by a quaternion rotation.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="rotation">The quaternion rotation.</param>
            <returns>The transformed plane.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Plane.Transform(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Plane@)">
            <summary>
            Transforms a normalized plane by a quaternion rotation.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="rotation">The quaternion rotation.</param>
            <param name="result">The transformed plane.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.PlaneIntersectionType">
            <summary>
            Defines the intersection between a <see cref="T:Microsoft.Xna.Framework.Plane"/> and a bounding volume.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.PlaneIntersectionType.Front">
            <summary>
            There is no intersection, the bounding volume is in the negative half space of the plane.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.PlaneIntersectionType.Back">
            <summary>
            There is no intersection, the bounding volume is in the positive half space of the plane.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.PlaneIntersectionType.Intersecting">
            <summary>
            The plane is intersected.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.PlayerIndex">
            <summary>
            Defines the index of player for various input components.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.PlayerIndex.One">
            <summary>
            The first player index.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.PlayerIndex.Two">
            <summary>
            The second player index.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.PlayerIndex.Three">
            <summary>
            The third player index.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.PlayerIndex.Four">
            <summary>
            The fourth player index.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Point">
            <summary>
            Describes a 2D-point.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Point.Zero">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Point"/> with coordinates 0, 0.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Point.X">
            <summary>
            The x coordinate of this <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Point.Y">
            <summary>
            The y coordinate of this <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a point with X and Y from two values.
            </summary>
            <param name="x">The x coordinate in 2d-space.</param>
            <param name="y">The y coordinate in 2d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.Equals(Microsoft.Xna.Framework.Point)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Point"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Point"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Point"/> in the format:
            {X:[<see cref="F:Microsoft.Xna.Framework.Point.X"/>] Y:[<see cref="F:Microsoft.Xna.Framework.Point.Y"/>]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Point"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Addition(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Adds two points.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the right of the add sign.</param>
            <returns>Sum of the points.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Subtraction(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Subtracts a <see cref="T:Microsoft.Xna.Framework.Point"/> from a <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the right of the sub sign.</param>
            <returns>Result of the subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Multiply(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Multiplies the components of two points by each other.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the right of the mul sign.</param>
            <returns>Result of the multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Division(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Point"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
            <param name="source">Source <see cref="T:Microsoft.Xna.Framework.Point"/> on the left of the div sign.</param>
            <param name="divisor">Divisor <see cref="T:Microsoft.Xna.Framework.Point"/> on the right of the div sign.</param>
            <returns>The result of dividing the points.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Equality(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Point"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Point"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Point"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Point.op_Inequality(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Point"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Point"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Point"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs">
            <summary>
            The arguments to the <see cref="E:Microsoft.Xna.Framework.GraphicsDeviceManager.PreparingDeviceSettings"/> event.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs.GraphicsDeviceInformation">
            <summary>
            The default settings that will be used in device creation.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs.#ctor(Microsoft.Xna.Framework.GraphicsDeviceInformation)">
            <summary>
            Create a new instance of the event.
            </summary>
            <param name="graphicsDeviceInformation">The default settings to be used in device creation.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Quaternion">
            <summary>
            An efficient mathematical representation for three dimensional rotations.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Quaternion.Identity">
            <summary>
            Returns a quaternion representing no rotation.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Quaternion.X">
            <summary>
            The x coordinate of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Quaternion.Y">
            <summary>
            The y coordinate of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Quaternion.Z">
            <summary>
            The z coordinate of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Quaternion.W">
            <summary>
            The rotation component of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a quaternion with X, Y, Z and W from four values.
            </summary>
            <param name="x">The x coordinate in 3d-space.</param>
            <param name="y">The y coordinate in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
            <param name="w">The rotation component.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.#ctor(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Constructs a quaternion with X, Y, Z from <see cref="T:Microsoft.Xna.Framework.Vector3"/> and rotation component from a scalar.
            </summary>
            <param name="value">The x, y, z coordinates in 3d-space.</param>
            <param name="w">The rotation component.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Conjugate">
            <summary>
            Transforms this quaternion into its conjugated version.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Equals(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Length">
            <summary>
            Returns the magnitude of the quaternion components.
            </summary>
            <returns>The magnitude of the quaternion components.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.LengthSquared">
            <summary>
            Returns the squared magnitude of the quaternion components.
            </summary>
            <returns>The squared magnitude of the quaternion components.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Normalize">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/> in the format:
            {X:[<see cref="F:Microsoft.Xna.Framework.Quaternion.X"/>] Y:[<see cref="F:Microsoft.Xna.Framework.Quaternion.Y"/>] Z:[<see cref="F:Microsoft.Xna.Framework.Quaternion.Z"/>] W:[<see cref="F:Microsoft.Xna.Framework.Quaternion.W"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Add(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains the sum of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The result of the quaternion addition.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Add(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains the sum of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The result of the quaternion addition as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Concatenate(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains concatenation between two quaternion.
            </summary>
            <param name="value1">The first <see cref="T:Microsoft.Xna.Framework.Quaternion"/> to concatenate.</param>
            <param name="value2">The second <see cref="T:Microsoft.Xna.Framework.Quaternion"/> to concatenate.</param>
            <returns>The result of rotation of <paramref name="value1"/> followed by <paramref name="value2"/> rotation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Concatenate(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains concatenation between two quaternion.
            </summary>
            <param name="value1">The first <see cref="T:Microsoft.Xna.Framework.Quaternion"/> to concatenate.</param>
            <param name="value2">The second <see cref="T:Microsoft.Xna.Framework.Quaternion"/> to concatenate.</param>
            <param name="result">The result of rotation of <paramref name="value1"/> followed by <paramref name="value2"/> rotation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Conjugate(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains conjugated version of the specified quaternion.
            </summary>
            <param name="value">The quaternion which values will be used to create the conjugated version.</param>
            <returns>The conjugate version of the specified quaternion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Conjugate(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains conjugated version of the specified quaternion.
            </summary>
            <param name="value">The quaternion which values will be used to create the conjugated version.</param>
            <param name="result">The conjugated version of the specified quaternion as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified axis and angle.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle in radians.</param>
            <returns>The new quaternion builded from axis and angle.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified axis and angle.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle in radians.</param>
            <param name="result">The new quaternion builded from axis and angle as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromRotationMatrix(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix">The rotation matrix.</param>
            <returns>A quaternion composed from the rotation part of the matrix.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromRotationMatrix(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="matrix">The rotation matrix.</param>
            <param name="result">A quaternion composed from the rotation part of the matrix as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified yaw, pitch and roll angles.
            </summary>
            <param name="yaw">Yaw around the y axis in radians.</param>
            <param name="pitch">Pitch around the x axis in radians.</param>
            <param name="roll">Roll around the z axis in radians.</param>
            <returns>A new quaternion from the concatenated yaw, pitch, and roll angles.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from the specified yaw, pitch and roll angles.
            </summary>
            <param name="yaw">Yaw around the y axis in radians.</param>
            <param name="pitch">Pitch around the x axis in radians.</param>
            <param name="roll">Roll around the z axis in radians.</param>
            <param name="result">A new quaternion from the concatenated yaw, pitch, and roll angles as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Divide(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Divides a <see cref="T:Microsoft.Xna.Framework.Quaternion"/> by the other <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Divisor <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The result of dividing the quaternions.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Divide(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Divides a <see cref="T:Microsoft.Xna.Framework.Quaternion"/> by the other <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Divisor <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The result of dividing the quaternions as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Dot(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Returns a dot product of two quaternions.
            </summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <returns>The dot product of two quaternions.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Dot(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,System.Single@)">
            <summary>
            Returns a dot product of two quaternions.
            </summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <param name="result">The dot product of two quaternions as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Inverse(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Returns the inverse quaternion which represents the opposite rotation.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The inverse quaternion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Inverse(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Returns the inverse quaternion which represents the opposite rotation.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The inverse quaternion as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Lerp(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion,System.Single)">
            <summary>
            Performs a linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <returns>The result of linear blending between two quaternions.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Lerp(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,System.Single,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Performs a linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <param name="result">The result of linear blending between two quaternions as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Slerp(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion,System.Single)">
            <summary>
            Performs a spherical linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <returns>The result of spherical linear blending between two quaternions.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Slerp(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,System.Single,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Performs a spherical linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <param name="result">The result of spherical linear blending between two quaternions as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Subtract(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains subtraction of one <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from another.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The result of the quaternion subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Subtract(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains subtraction of one <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from another.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The result of the quaternion subtraction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Multiply(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains a multiplication of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The result of the quaternion multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Multiply(Microsoft.Xna.Framework.Quaternion,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the quaternion multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Multiply(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains a multiplication of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The result of the quaternion multiplication as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Multiply(Microsoft.Xna.Framework.Quaternion@,System.Single,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Quaternion"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the quaternion multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Negate(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The result of the quaternion negation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Negate(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The result of the quaternion negation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Normalize(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <returns>The unit length quaternion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.Normalize(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Quaternion@)">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.</param>
            <param name="result">The unit length quaternion an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Addition(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the left of the add sign.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Division(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Divides a <see cref="T:Microsoft.Xna.Framework.Quaternion"/> by the other <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the left of the div sign.</param>
            <param name="quaternion2">Divisor <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the right of the div sign.</param>
            <returns>The result of dividing the quaternions.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Equality(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Quaternion"/> instances are equal.
            </summary>
            <param name="quaternion1"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> instance on the left of the equal sign.</param>
            <param name="quaternion2"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Inequality(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Quaternion"/> instances are not equal.
            </summary>
            <param name="quaternion1"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> instance on the left of the not equal sign.</param>
            <param name="quaternion2"><see cref="T:Microsoft.Xna.Framework.Quaternion"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Multiply(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Multiplies two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the left of the mul sign.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the right of the mul sign.</param>
            <returns>Result of the quaternions multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Multiply(Microsoft.Xna.Framework.Quaternion,System.Single)">
            <summary>
            Multiplies the components of quaternion by a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the quaternion multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_Subtraction(Microsoft.Xna.Framework.Quaternion,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Subtracts a <see cref="T:Microsoft.Xna.Framework.Quaternion"/> from a <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the sub sign.</param>
            <param name="quaternion2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the quaternion subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Quaternion.op_UnaryNegation(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:Microsoft.Xna.Framework.Quaternion"/> on the right of the sub sign.</param>
            <returns>The result of the quaternion negation.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Rectangle">
            <summary>
            Describes a 2D-rectangle.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Left">
            <summary>
            Returns the x coordinate of the left edge of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Right">
            <summary>
            Returns the x coordinate of the right edge of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Top">
            <summary>
            Returns the y coordinate of the top edge of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Bottom">
            <summary>
            Returns the y coordinate of the bottom edge of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Location">
            <summary>
            The top-left coordinates of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Center">
            <summary>
            A <see cref="T:Microsoft.Xna.Framework.Point"/> located in the center of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>'s bounds.
            </summary>
            <remarks>
            If <see cref="F:Microsoft.Xna.Framework.Rectangle.Width"/> or <see cref="F:Microsoft.Xna.Framework.Rectangle.Height"/> is an odd number,
            the center point will be rounded down.
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.IsEmpty">
            <summary>
            Whether or not this <see cref="T:Microsoft.Xna.Framework.Rectangle"/> has a width and
            height of 0, and a position of (0, 0).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Rectangle.Empty">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Rectangle"/> with X=0, Y=0, Width=0, and Height=0.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Rectangle.X">
            <summary>
            The x coordinate of the top-left corner of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Rectangle.Y">
            <summary>
            The y coordinate of the top-left corner of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Rectangle.Width">
            <summary>
            The width of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Rectangle.Height">
            <summary>
            The height of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:Microsoft.Xna.Framework.Rectangle"/> with the specified
            position, width, and height.
            </summary>
            <param name="x">The x coordinate of the top-left corner of the created <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="y">The y coordinate of the top-left corner of the created <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="width">The width of the created <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <param name="height">The height of the created <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(System.Int32,System.Int32)">
            <summary>
            Gets whether or not the provided coordinates lie within the bounds of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="x">The x coordinate of the point to check for containment.</param>
            <param name="y">The y coordinate of the point to check for containment.</param>
            <returns><c>true</c> if the provided coordinates lie inside this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>. <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(Microsoft.Xna.Framework.Point)">
            <summary>
            Gets whether or not the provided <see cref="T:Microsoft.Xna.Framework.Point"/> lies within the bounds of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <returns><c>true</c> if the provided <see cref="T:Microsoft.Xna.Framework.Point"/> lies inside this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>. <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Contains(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Gets whether or not the provided <see cref="T:Microsoft.Xna.Framework.Rectangle"/> lies within the bounds of this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="value">The <see cref="T:Microsoft.Xna.Framework.Rectangle"/> to check for inclusion in this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.</param>
            <returns><c>true</c> if the provided <see cref="T:Microsoft.Xna.Framework.Rectangle"/>'s bounds lie entirely inside this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>. <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Offset(Microsoft.Xna.Framework.Point)">
            <summary>
            Increments this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>'s <see cref="P:Microsoft.Xna.Framework.Rectangle.Location"/> by the
            x and y components of the provided <see cref="T:Microsoft.Xna.Framework.Point"/>.
            </summary>
            <param name="offset">The x and y components to add to this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>'s <see cref="P:Microsoft.Xna.Framework.Rectangle.Location"/>.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Offset(System.Int32,System.Int32)">
            <summary>
            Increments this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>'s <see cref="P:Microsoft.Xna.Framework.Rectangle.Location"/> by the
            provided x and y coordinates.
            </summary>
            <param name="offsetX">The x coordinate to add to this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>'s <see cref="P:Microsoft.Xna.Framework.Rectangle.Location"/>.</param>
            <param name="offsetY">The y coordinate to add to this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>'s <see cref="P:Microsoft.Xna.Framework.Rectangle.Location"/>.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Equals(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Checks whether or not this <see cref="T:Microsoft.Xna.Framework.Rectangle"/> is equivalent
            to a provided <see cref="T:Microsoft.Xna.Framework.Rectangle"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Rectangle"/> to test for equality.</param>
            <returns>
            <c>true</c> if this <see cref="T:Microsoft.Xna.Framework.Rectangle"/>'s x coordinate, y coordinate, width, and height
            match the values for the provided <see cref="T:Microsoft.Xna.Framework.Rectangle"/>. <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Equals(System.Object)">
            <summary>
            Checks whether or not this <see cref="T:Microsoft.Xna.Framework.Rectangle"/> is equivalent
            to a provided object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to test for equality.</param>
            <returns>
            <c>true</c> if the provided object is a <see cref="T:Microsoft.Xna.Framework.Rectangle"/>, and this
            <see cref="T:Microsoft.Xna.Framework.Rectangle"/>'s x coordinate, y coordinate, width, and height
            match the values for the provided <see cref="T:Microsoft.Xna.Framework.Rectangle"/>. <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Intersects(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Gets whether or not the other <see cref="T:Microsoft.Xna.Framework.Rectangle"/> intersects with this rectangle.
            </summary>
            <param name="value">The other rectangle for testing.</param>
            <returns><c>true</c> if other <see cref="T:Microsoft.Xna.Framework.Rectangle"/> intersects with this rectangle; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Rectangle.Intersects(Microsoft.Xna.Framework.Rectangle@,System.Boolean@)">
            <summary>
            Gets whether or not the other <see cref="T:Microsoft.Xna.Framework.Rectangle"/> intersects with this rectangle.
            </summary>
            <param name="value">The other rectangle for testing.</param>
            <param name="result"><c>true</c> if other <see cref="T:Microsoft.Xna.Framework.Rectangle"/> intersects with this rectangle; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Storage.StorageContainer">
            <summary>
            Contains a logical collection of files used for user-data storage.
            </summary>
            <remarks>
            MSDN documentation contains related conceptual article:
            http://msdn.microsoft.com/en-us/library/bb200105.aspx#ID4EDB
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageContainer.DisplayName">
            <summary>
            The title's (i.e. "game's") filename.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageContainer.IsDisposed">
            <summary>
            A bool value indicating whether the instance has been disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageContainer.StorageDevice">
            <summary>
            The <see cref="P:Microsoft.Xna.Framework.Storage.StorageContainer.StorageDevice"/> that holds logical files for the container.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.Storage.StorageContainer.Disposing">
            <summary>
            Fired when <see cref="M:Microsoft.Xna.Framework.Storage.StorageContainer.Dispose"/> is called or object is finalized or collected
            by the garbage collector.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.#ctor(Microsoft.Xna.Framework.Storage.StorageDevice,System.String,System.String,System.Nullable{Microsoft.Xna.Framework.PlayerIndex})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Storage.StorageContainer"/> class.
            </summary>
            <param name='device'>The attached storage-device.</param>
            <param name='name'>The title's filename.</param>
            <param name='rootPath'>The path of the storage root folder</param>
            <param name='playerIndex'>
            The index of the player whose data is being saved, or null if data is for all
            players.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.Dispose">
            <summary>
            Disposes un-managed objects referenced by this object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.CreateDirectory(System.String)">
            <summary>
            Creates a new directory in the storage-container.
            </summary>
            <param name="directory">Relative path of the directory to be created.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.CreateFile(System.String)">
            <summary>
            Creates a file in the storage-container.
            </summary>
            <param name="file">Relative path of the file to be created.</param>
            <returns>Returns <see cref="T:System.IO.Stream"/> for the created file.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.DeleteDirectory(System.String)">
            <summary>
            Deletes specified directory from the storage-container.
            </summary>
            <param name="directory">The relative path of the directory to be deleted.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.DeleteFile(System.String)">
            <summary>
            Deletes a file from the storage-container.
            </summary>
            <param name="file">The relative path of the file to be deleted.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.DirectoryExists(System.String)">
            <summary>
            Returns true if specified path exists in the storage-container, false otherwise.
            </summary>
            <param name="directory">The relative path of the directory to query for.</param>
            <returns>True if the directory path exists, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.FileExists(System.String)">
            <summary>
            Returns true if the specified file exists in the storage-container, false otherwise.
            </summary>
            <param name="file">The relative path of the file to query for.</param>
            <returns>True if file exists, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.GetDirectoryNames">
            <summary>
            Returns an array of the directory names in the storage-container.
            </summary>
            <returns>Array of directory names.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.GetDirectoryNames(System.String)">
            <summary>
            Returns an array of directory names with given search pattern.
            </summary>
            <param name="searchPattern">
            A search pattern that supports single-character ("?") and multicharacter ("*")
            wildcards.
            </param>
            <returns>Array of matched directory names.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.GetFileNames">
            <summary>
            Returns an array of file names in the storage-container.
            </summary>
            <returns>Array of file names.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.GetFileNames(System.String)">
            <summary>
            Returns an array of file names with given search pattern.
            </summary>
            <param name="searchPattern">
            A search pattern that supports single-character ("?") and multicharacter ("*")
            wildcards.
            </param>
            <returns>Array of matched file names.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.OpenFile(System.String,System.IO.FileMode)">
            <summary>
            Opens a file contained in storage-container.
            </summary>
            <param name="file">Relative path of the file.</param>
            <param name="fileMode">
            <see cref="T:System.IO.FileMode"/> that specifies how the file is to be opened.
            </param>
            <returns><see cref="T:System.IO.Stream"/> object for the opened file.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a file contained in storage-container.
            </summary>
            <param name="file">Relative path of the file.</param>
            <param name="fileMode">
            <see cref="T:System.IO.FileMode"/> that specifies how the file is to be opened.
            </param>
            <param name="fileAccess">
            <see cref="T:System.IO.FileAccess"/> that specifies access mode.
            </param>
            <returns><see cref="T:System.IO.Stream"/> object for the opened file.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens a file contained in storage-container.
            </summary>
            <param name="file">Relative path of the file.</param>
            <param name="fileMode">
            <see cref="T:System.IO.FileMode"/> that specifies how the file is to be opened.
            </param>
            <param name="fileAccess">
            <see cref="T:System.IO.FileAccess"/> that specifies access mode.
            </param>
            <param name="fileShare">A bitwise combination of <see cref="T:System.IO.FileShare"/>
            enumeration values that specifies access modes for other stream objects.</param>
            <returns><see cref="T:System.IO.Stream"/> object for the opened file.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Storage.StorageDevice">
            <summary>
            Exposes a storage device for storing user data.
            </summary>
            <remarks>
            MSDN documentation contains related conceptual article:
            http://msdn.microsoft.com/en-us/library/bb200105.aspx
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageDevice.FreeSpace">
            <summary>
            Returns the amount of free space.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageDevice.IsConnected">
            <summary>
            Returns true if this StorageDevice path is accessible, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageDevice.TotalSpace">
            <summary>
            Returns the total size of device.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.Storage.StorageDevice.DeviceChanged">
            <summary>
            Fired when a device is removed or inserted.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageDevice.BeginOpenContainer(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins the open for a StorageContainer.
            </summary>
            <returns>The open StorageContainer.</returns>
            <param name="displayName">Name of file.</param>
            <param name="callback">Method to call on completion.</param>
            <param name="state">Request identifier object for callback (can be null).</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageDevice.EndOpenContainer(System.IAsyncResult)">
            <summary>
            Ends the open container process.
            </summary>
            <returns>The open StorageContainer.</returns>
            <param name="result">Result of BeginOpenContainer.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageDevice.BeginShowSelector(System.AsyncCallback,System.Object)">
            <summary>
            Begin process to display the StorageDevice selector UI.
            </summary>
            <returns>The show selector.</returns>
            <param name="callback">Method to invoke when device is selected by player.</param>
            <param name="state">Request identifier object for callback (can be null).</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageDevice.BeginShowSelector(Microsoft.Xna.Framework.PlayerIndex,System.AsyncCallback,System.Object)">
            <summary>
            Begin process to display the StorageDevice selector UI.
            </summary>
            <returns>The show selector.</returns>
            <param name="player">The PlayerIndex. Only PlayerIndex.One is valid on Windows.</param>
            <param name="callback">Method to invoke when device is selected by player.</param>
            <param name="state">Request identifier object for callback (can be null).</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageDevice.BeginShowSelector(System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begin process to display the StorageDevice selector UI.
            </summary>
            <returns>The show selector.</returns>
            <param name="sizeInBytes">Size (in bytes) of data to write.</param>
            <param name="directoryCount">Number of directories to write.</param>
            <param name="callback">Method to invoke when device is selected by player.</param>
            <param name="state">Request identifier object for callback (can be null).</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageDevice.BeginShowSelector(Microsoft.Xna.Framework.PlayerIndex,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begin process to display the StorageDevice selector UI.
            </summary>
            <returns>The show selector.</returns>
            <param name="player">The PlayerIndex. Only PlayerIndex.One is valid on Windows.</param>
            <param name="sizeInBytes">Size (in bytes) of data to write.</param>
            <param name="directoryCount">Number of directories to write.</param>
            <param name="callback">Method to invoke when device is selected by player.</param>
            <param name="state">Request identifier object for callback (can be null).</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageDevice.EndShowSelector(System.IAsyncResult)">
            <summary>
            Ends the show selector user interface display.
            </summary>
            <returns>The storage device.</returns>
            <param name="result">The result of BeginShowSelector.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.TitleContainer.OpenStream(System.String)">
            <summary>
            Returns an open stream to an exsiting file in the title storage area.
            </summary>
            <param name="name">The filepath relative to the title storage area.</param>
            <returns>A open stream or null if the file is not found.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.FNAInternalExtensions.TryGetBuffer(System.IO.MemoryStream,System.Byte[]@)">
            <summary>
            Returns the array of unsigned bytes from which this stream was created.
            The return value indicates whether the conversion succeeded.
            This is similar to .NET 4.6's TryGetBuffer.
            </summary>
            <param name="stream">The stream to get the buffer from.</param>
            <param name="buffer">The byte array from which this stream was created.</param>
            <returns><b>true</b> if the conversion was successful; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Vector2">
            <summary>
            Describes a 2D-vector.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.Zero">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector2"/> with components 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.One">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector2"/> with components 1, 1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.UnitX">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector2"/> with components 1, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector2.UnitY">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector2"/> with components 0, 1.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector2.X">
            <summary>
            The x coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector2.Y">
            <summary>
            The y coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a 2d vector with X and Y from two values.
            </summary>
            <param name="x">The x coordinate in 2d-space.</param>
            <param name="y">The y coordinate in 2d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.#ctor(System.Single)">
            <summary>
            Constructs a 2d vector with X and Y set to the same value.
            </summary>
            <param name="value">The x and y coordinates in 2d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Equals(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Vector2"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Length">
            <summary>
            Returns the length of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <returns>The length of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <returns>The squared length of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Normalize">
            <summary>
            Turns this <see cref="T:Microsoft.Xna.Framework.Vector2"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Vector2"/> in the format:
            {X:[<see cref="F:Microsoft.Xna.Framework.Vector2.X"/>] Y:[<see cref="F:Microsoft.Xna.Framework.Vector2.Y"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Add(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Add(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Barycentric(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 2d-triangle.
            </summary>
            <param name="value1">The first vector of 2d-triangle.</param>
            <param name="value2">The second vector of 2d-triangle.</param>
            <param name="value3">The third vector of 2d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 2d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 2d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Barycentric(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 2d-triangle.
            </summary>
            <param name="value1">The first vector of 2d-triangle.</param>
            <param name="value2">The second vector of 2d-triangle.</param>
            <param name="value3">The third vector of 2d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 2d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 2d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.CatmullRom(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.CatmullRom(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Clamp(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Clamp(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Distance(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Distance(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.DistanceSquared(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.DistanceSquared(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Divide(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Divide(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Divide(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Divide(Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Dot(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Dot(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Hermite(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Hermite(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Lerp(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Lerp(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Max(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector2"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Max(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector2"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Min(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector2"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Min(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector2"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Multiply(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Multiply(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector2"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Multiply(Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector2"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Multiply(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Negate(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains the specified vector inversion.
            direction of <paramref name="value"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Negate(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains the specified vector inversion.
            direction of <paramref name="value"/> in <paramref name="result"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Normalize(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Normalize(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Reflect(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="normal">Reflection normal.</param>
            <returns>Reflected vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Reflect(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="normal">Reflection normal.</param>
            <param name="result">Reflected vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.SmoothStep(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.SmoothStep(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Subtract(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector2"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Subtract(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector2"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector2"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector2"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector2"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.Transform(Microsoft.Xna.Framework.Vector2[],System.Int32,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector2"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.TransformNormal(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of the specified normal by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed normal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.TransformNormal(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector2"/> that contains a transformation of the specified normal by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed normal as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.TransformNormal(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Apply transformation on all normals within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.TransformNormal(Microsoft.Xna.Framework.Vector2[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on normals within array of <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector2"/> should be written.</param>
            <param name="length">The number of normals to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_UnaryNegation(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Inverts values in the specified <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Equality(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Vector2"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.Vector2"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.Vector2"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Inequality(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Vector2"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.Vector2"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.Vector2"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Addition(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Subtraction(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Subtracts a <see cref="T:Microsoft.Xna.Framework.Vector2"/> from a <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Multiply(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Multiply(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Multiply(System.Single,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Division(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector2.op_Division(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Vector3">
            <summary>
            Describes a 3D-vector.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Zero">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.One">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 1, 1, 1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.UnitX">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 1, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.UnitY">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 1, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.UnitZ">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 0, 1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Up">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 1, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Down">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, -1, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Right">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 1, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Left">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components -1, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Forward">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 0, -1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector3.Backward">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector3"/> with components 0, 0, 1.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector3.X">
            <summary>
            The x coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector3.Y">
            <summary>
            The y coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector3.Z">
            <summary>
            The z coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y and Z from three values.
            </summary>
            <param name="x">The x coordinate in 3d-space.</param>
            <param name="y">The y coordinate in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.#ctor(System.Single)">
            <summary>
            Constructs a 3d vector with X, Y and Z set to the same value.
            </summary>
            <param name="value">The x, y and z coordinates in 3d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.#ctor(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y from <see cref="T:Microsoft.Xna.Framework.Vector2"/> and Z from a scalar.
            </summary>
            <param name="value">The x and y coordinates in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Equals(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Vector3"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Length">
            <summary>
            Returns the length of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <returns>The length of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <returns>The squared length of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Normalize">
            <summary>
            Turns this <see cref="T:Microsoft.Xna.Framework.Vector3"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Vector3"/> in the format:
            {X:[<see cref="F:Microsoft.Xna.Framework.Vector3.X"/>] Y:[<see cref="F:Microsoft.Xna.Framework.Vector3.Y"/>] Z:[<see cref="F:Microsoft.Xna.Framework.Vector3.Z"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Add(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Add(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Barycentric(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 3d-triangle.
            </summary>
            <param name="value1">The first vector of 3d-triangle.</param>
            <param name="value2">The second vector of 3d-triangle.</param>
            <param name="value3">The third vector of 3d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 3d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 3d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Barycentric(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 3d-triangle.
            </summary>
            <param name="value1">The first vector of 3d-triangle.</param>
            <param name="value2">The second vector of 3d-triangle.</param>
            <param name="value3">The third vector of 3d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 3d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 3d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.CatmullRom(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.CatmullRom(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Clamp(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Clamp(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Cross(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Computes the cross product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The cross product of two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Cross(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Computes the cross product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <param name="result">The cross product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Distance(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Distance(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.DistanceSquared(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.DistanceSquared(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Divide(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Divide(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Divide(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Divide(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Dot(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Dot(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Hermite(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Hermite(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Lerp(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Lerp(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Max(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector3"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Max(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector3"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Min(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector3"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Min(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector3"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Multiply(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Multiply(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector3"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Multiply(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector3"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Multiply(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Negate(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Negate(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Normalize(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Normalize(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Reflect(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="normal">Reflection normal.</param>
            <returns>Reflected vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Reflect(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="normal">Reflection normal.</param>
            <param name="result">Reflected vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.SmoothStep(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.SmoothStep(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Subtract(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector3"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Subtract(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector3"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector3"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],System.Int32,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3[],System.Int32,System.Int32)" -->
        <member name="M:Microsoft.Xna.Framework.Vector3.TransformNormal(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of the specified normal by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed normal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.TransformNormal(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector3"/> that contains a transformation of the specified normal by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed normal as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.TransformNormal(Microsoft.Xna.Framework.Vector3[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Apply transformation on all normals within array of <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.TransformNormal(Microsoft.Xna.Framework.Vector3[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on normals within array of <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector3"/> should be written.</param>
            <param name="length">The number of normals to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Equality(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Vector3"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.Vector3"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.Vector3"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Inequality(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Vector3"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:Microsoft.Xna.Framework.Vector3"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:Microsoft.Xna.Framework.Vector3"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Addition(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_UnaryNegation(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Inverts values in the specified <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Subtraction(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Subtracts a <see cref="T:Microsoft.Xna.Framework.Vector3"/> from a <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Multiply(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Multiply(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Multiply(System.Single,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Division(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.op_Division(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector3"/> by a scalar.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Vector4">
            <summary>
            Describes a 4D-vector.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.Zero">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 0, 0, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.One">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 1, 1, 1, 1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitX">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 1, 0, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitY">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 0, 1, 0, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitZ">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 0, 0, 1, 0.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Vector4.UnitW">
            <summary>
            Returns a <see cref="T:Microsoft.Xna.Framework.Vector4"/> with components 0, 0, 0, 1.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector4.X">
            <summary>
            The x coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector4.Y">
            <summary>
            The y coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector4.Z">
            <summary>
            The z coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Vector4.W">
            <summary>
            The w coordinate of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y, Z and W from four values.
            </summary>
            <param name="x">The x coordinate in 4d-space.</param>
            <param name="y">The y coordinate in 4d-space.</param>
            <param name="z">The z coordinate in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.#ctor(Microsoft.Xna.Framework.Vector2,System.Single,System.Single)">
            <summary>
            Constructs a 3d vector with X and Z from <see cref="T:Microsoft.Xna.Framework.Vector2"/> and Z and W from the scalars.
            </summary>
            <param name="value">The x and y coordinates in 4d-space.</param>
            <param name="z">The z coordinate in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.#ctor(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y, Z from <see cref="T:Microsoft.Xna.Framework.Vector3"/> and W from a scalar.
            </summary>
            <param name="value">The x, y and z coordinates in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.#ctor(System.Single)">
            <summary>
            Constructs a 4d vector with X, Y, Z and W set to the same value.
            </summary>
            <param name="value">The x, y, z and w coordinates in 4d-space.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Equals(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Vector4"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Length">
            <summary>
            Returns the length of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <returns>The length of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <returns>The squared length of this <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Normalize">
            <summary>
            Turns this <see cref="T:Microsoft.Xna.Framework.Vector4"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Add(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Add(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 4d-triangle.
            </summary>
            <param name="value1">The first vector of 4d-triangle.</param>
            <param name="value2">The second vector of 4d-triangle.</param>
            <param name="value3">The third vector of 4d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 4d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 4d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 4d-triangle.
            </summary>
            <param name="value1">The first vector of 4d-triangle.</param>
            <param name="value2">The second vector of 4d-triangle.</param>
            <param name="value3">The third vector of 4d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 4d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 4d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Clamp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Clamp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Distance(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Distance(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.DistanceSquared(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.DistanceSquared(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector4"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector4"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Divides the components of a <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the components of another <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Divisor <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Dot(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Dot(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Max(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector4"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Max(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector4"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Min(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.Vector4"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Min(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Microsoft.Xna.Framework.Vector4"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector4"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a multiplication of <see cref="T:Microsoft.Xna.Framework.Vector4"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Negate(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Negate(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Normalize(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Normalize(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.SmoothStep(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.SmoothStep(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Subtract(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector4"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Subtract(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains subtraction of on <see cref="T:Microsoft.Xna.Framework.Vector4"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the specified <see cref="T:Microsoft.Xna.Framework.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Microsoft.Xna.Framework.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector4"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Vector4"/>.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Microsoft.Xna.Framework.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Microsoft.Xna.Framework.Vector4"/> by the specified <see cref="T:Microsoft.Xna.Framework.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:Microsoft.Xna.Framework.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Microsoft.Xna.Framework.Vector4"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:MonoGame.Utilities.FileHelpers.ResolveRelativePath(System.String,System.String)">
            <summary>
            Combines the filePath and relativeFile based on relativeFile being a file in the same location as filePath.
            Relative directory operators (..) are also resolved
            </summary>
            <example>"A\B\C.txt","D.txt" becomes "A\B\D.txt"</example>
            <example>"A\B\C.txt","..\D.txt" becomes "A\D.txt"</example>
            <param name="filePath">Path to the file we are starting from</param>
            <param name="relativeFile">Relative location of another file to resolve the path to</param>
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumTouchDevices">
            \brief Get the number of registered touch devices.
        </member>
        <member name="M:SDL2.SDL.SDL_GetTouchDevice(System.Int32)">
            \brief Get the touch ID with the given index, or 0 if the index is invalid.
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumTouchFingers(System.Int64)">
            \brief Get the number of active fingers for a given touch device.
        </member>
        <member name="M:SDL2.SDL.SDL_GetTouchFinger(System.Int64,System.Int32)">
            \brief Get the finger object of the given touch, with the given index.
            Returns pointer to SDL_Finger.
        </member>
    </members>
</doc>
